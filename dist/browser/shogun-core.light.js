!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.ShogunCore=t():e.ShogunCore=t()}(this,(()=>(()=>{var e,t,r,i={409:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Webauthn:()=>i,default:()=>a});class i{constructor(){}isSupported(){return!1}validateUsername(){throw new Error("WebAuthn functionality disabled in light version")}async createAccount(){throw new Error("WebAuthn functionality disabled in light version")}async authenticateUser(){throw new Error("WebAuthn functionality disabled in light version")}async sign(){throw new Error("WebAuthn functionality disabled in light version")}}const a=i},2256:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Stealth:()=>i,default:()=>a});class i{constructor(){}formatPublicKey(){throw new Error("Stealth functionality disabled in light version")}async createAccount(){throw new Error("Stealth functionality disabled in light version")}async generateStealthAddress(){throw new Error("Stealth functionality disabled in light version")}async openStealthAddress(){throw new Error("Stealth functionality disabled in light version")}async getPublicKey(){throw new Error("Stealth functionality disabled in light version")}prepareStealthKeysForSaving(){throw new Error("Stealth functionality disabled in light version")}deriveWalletFromSecret(){throw new Error("Stealth functionality disabled in light version")}}const a=i},2578:(e,t,r)=>{"use strict";var i=r(9229),a=r.n(i),n=(r(8030),r(7028)),s=r(5628),o=r(3358);class c{constructor(e={}){this.user=null,this.certificato=null,this.onAuthCallbacks=[],this._authenticating=!1,(0,s.Rm)("Initializing GunDB"),this.retryConfig={attempts:e.retryAttempts??3,delay:e.retryDelay??1e3};const t={peers:e.peers,localStorage:e.localStorage??!1,radisk:e.radisk??!1,multicast:e.multicast??!1,axe:e.axe??!1};if(e.authToken){const t=e.authToken.substring(0,3)+"..."+(e.authToken.length>6?e.authToken.substring(e.authToken.length-3):"");(0,s.Rm)(`Auth token received (${t})`)}else(0,s.Rm)("No auth token received");this.gun=new(a())(t),this.user=this.gun.user().recall({sessionStorage:!0});e.authToken&&(a().on("opt",(function(e){e.once||e.on("out",(function(t){var r=e.to;t.headers={token:"thisIsTheTokenForReals"},r.next(t)}))})),(0,s.Rm)("Auth token handler configured for outgoing messages")),this.subscribeToAuthEvents()}async retry(e,t){let r;for(let i=0;i<this.retryConfig.attempts;i++)try{return await e()}catch(e){if(r=e instanceof Error?e:new Error(String(e)),i<this.retryConfig.attempts-1){const e=this.retryConfig.delay*Math.pow(2,i);(0,s.Rm)(`Retry attempt ${i+1} for ${t} in ${e}ms`),await new Promise((t=>setTimeout(t,e)))}}throw r}subscribeToAuthEvents(){this.gun.on("auth",(e=>{(0,s.Rm)("Auth event received:",e),e.err?o.zc.handle(o.By.GUN,"AUTH_EVENT_ERROR",e.err,new Error(e.err)):this.notifyAuthListeners(e.sea?.pub||"")}))}notifyAuthListeners(e){const t=this.gun.user();this.onAuthCallbacks.forEach((e=>{e(t)}))}static withPeers(e=n.A.PEERS){return new c({peers:e})}onAuth(e){this.onAuthCallbacks.push(e);const t=this.gun.user();return t&&t.is&&e(t),()=>{const t=this.onAuthCallbacks.indexOf(e);-1!==t&&this.onAuthCallbacks.splice(t,1)}}getGun(){return this.gun}getUser(){return this.gun.user()}setCertificate(e){this.certificato=e;this.gun.user().get("trust").get("certificate").put(e)}getCertificate(){return this.certificato}async signUp(e,t){try{return(0,s.Rm)("Attempting user registration:",e),new Promise((r=>{this.gun.user().create(e,t,(async i=>{if(i.err)(0,s.vV)(`Registration error: ${i.err}`),r({success:!1,error:i.err});else{const i=await this.login(e,t);i.success?(0,s.Rm)("Registration and login completed successfully"):(0,s.vV)("Registration completed but login failed"),r(i)}}))}))}catch(e){return(0,s.vV)("Error during registration:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error"}}}login(e,t,r){return(0,s.Rm)(`Attempting login for user: ${e}`),new Promise(((i,a)=>{if(!e||!t){const e="Username and password are required";return(0,s.Rm)(e),r&&r({err:e}),void a(new Error(e))}try{this.gun.user().leave(),(0,s.Rm)("Current user reset before login attempt")}catch(e){}(0,s.Rm)(`Performing auth with Gun for user: ${e}`),this.gun.user().auth(e,t,(t=>{if(t.err)(0,s.Rm)(`Login error: ${t.err}`),r&&r({err:t.err}),a(new Error(t.err));else{(0,s.Rm)("Authentication completed successfully");try{this._savePair(),(0,s.Rm)("User auth pair saved")}catch(e){(0,s.Rm)(`Warning: Error saving auth pair: ${e}`)}r&&r(t),i({success:!0,userPub:this.gun.user().is?.pub,username:e})}}))}))}_savePair(){try{const e=this.gun.user(),t=e._&&e._.sea;t&&"undefined"!=typeof localStorage&&localStorage.setItem("pair",JSON.stringify(t))}catch(e){}}isAuthenticating(){return!0===this._authenticating}_setAuthenticating(e){this._authenticating=e}logout(){try{(0,s.Rm)("Attempting logout"),this.gun.user().leave(),(0,s.Rm)("Logout completed")}catch(e){(0,s.vV)("Error during logout:",e)}}isLoggedIn(){const e=this.gun.user();return!!(e&&e.is&&e.is.pub)}getCurrentUser(){const e=this.gun.user()?.is?.pub;return e?{pub:e,user:this.gun.user()}:null}async saveWithRetry(e,t,r){return this.retry((()=>new Promise(((i,a)=>{e.put(t,(e=>{e.err?a(new Error(e.err)):i(t)}),r)}))),"data save operation")}async readWithRetry(e){return this.retry((()=>new Promise((t=>{e.once((e=>t(e)))}))),"data read operation")}async saveUserData(e,t){try{if(!this.gun.user()?.is?.pub)throw new Error("User not authenticated");const r=this.certificato?{opt:{cert:this.certificato}}:void 0;return await this.saveWithRetry(this.gun.user().get(e),t,r)}catch(t){throw o.zc.handle(o.By.GUN,"SAVE_USER_DATA_ERROR",`Error saving data to path ${e}`,t),t}}async getUserData(e){try{if(!this.gun.user()?.is?.pub)throw new Error("User not authenticated");const t=await this.readWithRetry(this.gun.user().get(e));return t?((0,s.Rm)(`Data retrieved from ${e}`),t):((0,s.Rm)(`No data found at ${e}`),null)}catch(t){throw o.zc.handle(o.By.GUN,"GET_USER_DATA_ERROR",`Error retrieving data from path ${e}`,t),t}}async savePublicData(e,t,r){return new Promise(((i,a)=>{const n=this.certificato?{opt:{cert:this.certificato}}:void 0;this.gun.get(e).get(t).put(r,(n=>{n&&n.err?((0,s.vV)(`Error saving public data: ${n.err}`),a(new Error(n.err))):((0,s.Rm)(`Public data saved to ${e}/${t}`),i(r))}),n)}))}async getPublicData(e,t){return new Promise((r=>{this.gun.get(e).get(t).once((i=>{i?((0,s.Rm)(`Public data retrieved from ${e}/${t}`),r(i)):((0,s.Rm)(`No public data found at ${e}/${t}`),r(null))}))}))}async generateKeyPair(){return a().SEA.pair()}}"undefined"!=typeof window?window.GunDB=c:void 0!==r.g&&(r.g.GunDB=c);var l,u,d=r(4134);class h{constructor(){if(this.store=new Map,this.isTestMode=!1,"undefined"!=typeof localStorage)try{const e=localStorage.getItem("shogun_keypair");e&&this.store.set("keypair",JSON.parse(e))}catch(e){this.isTestMode}}async getPair(){return this.getPairSync()}getPairSync(){return this.store.get("keypair")||null}async setPair(e){if(this.store.set("keypair",e),"undefined"!=typeof localStorage)try{localStorage.setItem("shogun_keypair",JSON.stringify(e))}catch(e){this.isTestMode}}clearAll(){if(this.store.clear(),"undefined"!=typeof localStorage)try{localStorage.removeItem("shogun_keypair")}catch(e){this.isTestMode}}getItem(e){const t=this.store.get(e);return void 0!==t?JSON.stringify(t):null}setItem(e,t){try{const r=JSON.parse(t);if(this.store.set(e,r),"undefined"!=typeof localStorage)try{localStorage.setItem(e,t)}catch(e){this.isTestMode}}catch(r){if(this.store.set(e,t),"undefined"!=typeof localStorage)try{localStorage.setItem(e,t)}catch(e){this.isTestMode}}}removeItem(e){if(this.store.delete(e),"undefined"!=typeof localStorage)try{localStorage.removeItem(e)}catch(e){this.isTestMode}}}!function(e){e.Authentication="authentication",e.Wallet="wallet",e.Privacy="privacy",e.Identity="identity",e.Utility="utility"}(l||(l={})),function(e){e.WebAuthn="webauthn",e.MetaMask="metamask",e.Stealth="stealth",e.DID="did",e.WalletManager="wallet"}(u||(u={}));var g=r(8051),m=r(7776),p=r(5330),w=r(5010);class f{constructor(e){this.gun=e,this.user=e.user().recall({sessionStorage:!0})}getUser(){return this.user}getUserPub(){return this.user.is?.pub}observe(e){return new p.c((t=>{const r="string"==typeof e?this.gun.get(e):e,i=r.on(((e,r)=>{if(null!=e)if("object"==typeof e&&null!==e){const r=this.removeGunMeta(e);t.next(r)}else t.next(e);else t.next(null)}));return()=>{i&&"function"==typeof i&&i(),r.off()}})).pipe((0,w.F)(((e,t)=>JSON.stringify(e)===JSON.stringify(t))))}match(e,t){return new p.c((r=>{const i="string"==typeof e?this.gun.get(e):e,a={},n=i.map().on(((e,i)=>{if("_"===i||!e)return;if(t&&!t(e))return void(a[i]&&(delete a[i],r.next(Object.values(a))));const n="object"==typeof e?this.removeGunMeta(e):e;a[i]=n,r.next(Object.values(a))}));return()=>{n&&"function"==typeof n&&n(),i.off()}}))}put(e,t){const r="string"==typeof e?this.gun.get(e):e;return new p.c((e=>{r.put(t,(r=>{r.err?e.error(new Error(r.err)):(e.next(t),e.complete())}))}))}set(e,t){const r="string"==typeof e?this.gun.get(e):e;return new p.c((e=>{r.set(t,(r=>{r.err?e.error(new Error(r.err)):(e.next(t),e.complete())}))}))}once(e){const t="string"==typeof e?this.gun.get(e):e;return new p.c((e=>{t.once((t=>{if(null==t)return e.next(null),void e.complete();const r="object"==typeof t?this.removeGunMeta(t):t;e.next(r),e.complete()}))}))}compute(e,t){const r=e.map((e=>"string"==typeof e?this.observe(e):e));return new p.c((i=>{let a=new Array(e.length).fill(void 0),n=new Array(e.length).fill(!1);const s=r.map(((e,r)=>e.subscribe({next:e=>{if(a[r]=e,a.every((e=>void 0!==e)))try{const e=t(...a);i.next(e)}catch(e){i.error(e)}},error:e=>i.error(e),complete:()=>{n[r]=!0,n.every((e=>e))&&i.complete()}})));return()=>{s.forEach((e=>e.unsubscribe()))}}))}userPut(e,t){return new p.c((r=>{this.gun.user().get(e).put(t,(e=>{e.err?r.error(new Error(e.err)):(r.next(t),r.complete())}))}))}userGet(e){return this.observe(this.gun.user().get(e))}observeUser(e){return this.observe(this.gun.user().get(e))}removeGunMeta(e){if(!e||"object"!=typeof e)return e;const t=Array.isArray(e)?[]:{};return Object.keys(e).forEach((r=>{if("_"===r||"#"===r)return;const i=e[r];t[r]=i&&"object"==typeof i?this.removeGunMeta(i):i})),t}}var y=r(409),v=r(8991),E=r(2256),D=r(4586),R=r(2011),b=r(7303),I=r(2724);class S extends d.b{constructor(e,t,r){super(),this.methodName="shogun",this.didCache=new Map,this.DEFAULT_CACHE_DURATION=18e5,this.DEFAULT_TIMEOUT=1e4,this.DEFAULT_MAX_RETRIES=3,this.DEFAULT_RETRY_DELAY=1e3,this.registryConfig={address:"0x1234...",network:"mainnet",timeout:this.DEFAULT_TIMEOUT,maxRetries:this.DEFAULT_MAX_RETRIES,retryDelay:this.DEFAULT_RETRY_DELAY},this.core=e,this.registryConfig={...this.registryConfig,...t},this.options=r||{useSecureRandomPassword:!0},(0,s.Rm)("ShogunDID initialized")}async createDID(e={}){try{if(!this.core.isLoggedIn())throw new Error("User must be logged in to create a DID");const t=this.getUserPublicKey();if(!t)throw new Error("Cannot retrieve user's public key");let r=R.S(b.YW(t)).slice(2,42);e.network&&(r=`${e.network}:${r}`);const i=`did:${this.methodName}:${r}`;return await this.storeDID(i,e),this.emit("didCreated",{did:i}),(0,s.Rm)(`Created DID: ${i}`),i}catch(e){throw(0,s.vV)("Error creating DID:",e),o.zc.handle(o.By.DID,"CREATE_DID_ERROR",e instanceof Error?e.message:"Error creating DID",e),e}}async storeDID(e,t){try{if(!this.isValidDID(e))throw new Error("Invalid DID format");const r=t.document||this.createDidDocument(e,t);return new Promise(((t,i)=>{this.core.gun.get("dids").get(e).put({document:JSON.stringify(r),created:(new Date).toISOString(),updated:(new Date).toISOString(),deactivated:!1},(r=>{r.err?i(new Error(`Failed to store DID: ${r.err}`)):this.core.gun.user().get("did").put(e,(e=>{e.err&&(0,s.vV)(`Warning: DID created but not associated with user: ${e.err}`),t()}))})),setTimeout((()=>i(new Error("Timeout storing DID"))),1e4)}))}catch(e){throw(0,s.vV)("Error storing DID:",e),e}}createDidDocument(e,t){const r=t.controller??this.getUserPublicKey()??e,i={"@context":["https://www.w3.org/ns/did/v1","https://w3id.org/security/suites/ed25519-2020/v1"],id:e,controller:r,verificationMethod:[{id:`${e}#keys-1`,type:"Ed25519VerificationKey2020",controller:e,publicKeyMultibase:`z${this.getUserPublicKey()||R.S(b.YW(e))}`}],authentication:[`${e}#keys-1`],assertionMethod:[`${e}#keys-1`]};return t.services&&t.services.length>0&&(i.service=t.services.map(((t,r)=>({id:`${e}#service-${r+1}`,type:t.type,serviceEndpoint:t.endpoint})))),i}getUserPublicKey(){try{if(!this.core.isLoggedIn())return null;const e=this.core.gun.user();return(e&&e._&&e._.sea&&e._.sea.pub)??null}catch(e){return(0,s.vV)("Error getting user public key:",e),null}}async resolveDID(e,t={}){try{const r=t.cacheDuration??this.DEFAULT_CACHE_DURATION,i=t.timeout??this.DEFAULT_TIMEOUT,a=this.didCache.get(e);if(a&&Date.now()-a.timestamp<r)return{didResolutionMetadata:{contentType:"application/did+json"},didDocument:this.getDocumentFromCache(a),didDocumentMetadata:{}};if(!this.isValidDID(e))return this.createErrorResolution("invalidDid","Invalid DID format");const[n,s,o]=e.split(":");return s!==this.methodName?this.createErrorResolution("unsupportedDidMethod",`Unsupported DID method: ${s}`):new Promise(((t,r)=>{const a=setTimeout((()=>{t(this.createErrorResolution("timeout","DID resolution timeout"))}),i);this.core.gun.get("dids").get(e).once((r=>{if(clearTimeout(a),r)try{const i=this.parseOrCreateDIDDocument(e,r);this.didCache.set(e,{data:i,document:i,timestamp:Date.now(),network:o.split(":")[0]||"main"}),t({didResolutionMetadata:{contentType:"application/did+json"},didDocument:i,didDocumentMetadata:{created:r.created,updated:r.updated,deactivated:r.deactivated??!1}})}catch(e){t(this.createErrorResolution("invalidDidDocument","Error parsing DID Document"))}else t(this.createErrorResolution("notFound","DID Document not found"))}))}))}catch(e){return(0,s.vV)("Error resolving DID:",e),this.createErrorResolution("internalError",e instanceof Error?e.message:"Unknown error")}}async registerDIDOnChain(e,t){try{if(!this.core.isLoggedIn())throw new Error("User must be logged in to register DID on chain");let r=t||this.getWallet();if(!r)throw new Error("No signer provided and main wallet not available");const i=["function registerDID(string did, string controller) public returns (bool)"],a=new I.NZ(this.registryConfig.address,i,r);for(let t=1;t<=this.registryConfig.maxRetries;t++)try{const t=await a.registerDID(e,this.getUserPublicKey()),r=await t.wait();return this.emit("didRegistered",{did:e,txHash:r.hash}),(0,s.Rm)(`DID registered on blockchain: ${e}, tx: ${r.hash}`),{success:!0,txHash:r.hash}}catch(e){if(t===this.registryConfig.maxRetries)throw e;await new Promise((e=>setTimeout(e,this.registryConfig.retryDelay)))}throw new Error("Failed to register DID after retries")}catch(e){return(0,s.vV)("Error registering DID on blockchain:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error"}}}async getCurrentUserDID(){try{if(!this.core.isLoggedIn())return null;return this.getUserPublicKey()?new Promise((e=>{this.core.gun.user().get("did").once((t=>{e(t&&"string"==typeof t?t:null)})),setTimeout((()=>e(null)),5e3)})):null}catch(e){return(0,s.vV)("Error getting current user DID:",e),null}}async authenticateWithDID(e,t){try{if((0,s.Rm)(`Authenticating with DID: ${e}`),!this.isValidDID(e))return{success:!1,error:"Invalid DID format"};const r=await this.resolveDID(e);if(r.didResolutionMetadata.error||!r.didDocument)return{success:!1,error:`DID resolution failed: ${r.didResolutionMetadata.error}`};const i=this.extractAuthenticationMethod(r.didDocument);return i?i.type.includes("EcdsaSecp256k1")?this.authenticateWithEthereum(i,t):i.type.includes("WebAuthn")?this.authenticateWithWebAuthn(i,t):this.authenticateWithGunDB(i.controller.split(":").pop()??"",t):{success:!1,error:"No valid authentication method found in DID Document"}}catch(e){return(0,s.vV)("Error authenticating with DID:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error during authentication"}}}async updateDIDDocument(e,t){try{if(!this.core.isLoggedIn())throw new Error("User must be logged in to update a DID document");if(!this.isValidDID(e))throw new Error("Invalid DID format");const r=await this.resolveDID(e);if(r.didResolutionMetadata.error||!r.didDocument)throw new Error(`Cannot update DID document: ${r.didResolutionMetadata.error??"Document not found"}`);const i=r.didDocument,a={...i,...t};if(t.service&&i.service){const e=[...i.service];for(const r of t.service){const t=e.findIndex((e=>e.id===r.id));t>=0?e[t]=r:e.push(r)}a.service=e}if(t.verificationMethod&&i.verificationMethod){const e=[...i.verificationMethod];for(const r of t.verificationMethod){const t=e.findIndex((e=>e.id===r.id));t>=0?e[t]=r:e.push(r)}a.verificationMethod=e}await this.storeDID(e,{document:a});const[n,,o]=e.split(":");return this.didCache.set(e,{data:a,document:a,timestamp:Date.now(),network:o.split(":")[0]||"main"}),this.emit("didUpdated",{did:e,document:a}),(0,s.Rm)(`Updated DID Document: ${e}`),!0}catch(e){return(0,s.vV)("Error updating DID document:",e),o.zc.handle(o.By.DID,"UPDATE_DID_ERROR",e instanceof Error?e.message:"Error updating DID",e),!1}}async deactivateDID(e){try{if(!this.core.isLoggedIn())throw new Error("User must be logged in to deactivate a DID");const t=await this.getCurrentUserDID();if(e!==t)throw new Error("Cannot deactivate a DID you don't control");return new Promise((t=>{this.core.gun.get("dids").get(e).put({deactivated:!0,updated:(new Date).toISOString()},(r=>{r.err?((0,s.vV)(`Error deactivating DID: ${r.err}`),t(!1)):((0,s.Rm)(`Successfully deactivated DID: ${e}`),t(!0))})),setTimeout((()=>t(!1)),1e4)}))}catch(e){return(0,s.vV)("Error deactivating DID:",e),!1}}isValidDID(e){return/^did:[a-z0-9]+:[a-zA-Z0-9.:%]+$/.test(e)}generateDIDDocument(e,t={}){const r=this.getUserPublicKey(),i={"@context":["https://www.w3.org/ns/did/v1","https://w3id.org/security/suites/ed25519-2020/v1"],id:e,controller:t.controller??e,verificationMethod:[{id:`${e}#keys-1`,type:"Ed25519VerificationKey2020",controller:e,publicKeyMultibase:`z${r}`}],authentication:[`${e}#keys-1`],assertionMethod:[`${e}#keys-1`]};return t.services&&t.services.length>0&&(i.service=t.services.map(((t,r)=>({id:`${e}#service-${r+1}`,type:t.type,serviceEndpoint:t.endpoint})))),i}createErrorResolution(e,t){return{didResolutionMetadata:{error:e,contentType:"application/did+json"},didDocument:null,didDocumentMetadata:{}}}parseOrCreateDIDDocument(e,t){if(t.document)try{return JSON.parse(t.document)}catch(e){(0,s.vV)("Error parsing stored DID Document, creating a basic one",e)}return{"@context":"https://www.w3.org/ns/did/v1",id:e,authentication:[]}}extractAuthenticationMethod(e){const t=e.authentication||[];for(const r of t){if("string"!=typeof r)return r;{const t=r,i=e.verificationMethod?.find((e=>e.id===t));if(i)return{id:i.id,type:i.type,controller:i.controller}}}return null}getWallet(){try{if("ShogunCore"===this.core.constructor.name){if(!this.core.getPlugin)return null;const e=this.core.getPlugin("ShogunCore"===this.core.constructor.name?"wallet":"walletManager");if(e&&"object"==typeof e&&"getMainWallet"in e)return e.getMainWallet()}else if("getMainWallet"in this.core)return this.core.getMainWallet();return null}catch(e){return null}}async authenticateWithEthereum(e,t){const r=e.id.split("#")[0].split(":").pop()||"";if("loginWithMetaMask"in this.core)return this.core.loginWithMetaMask(r);if(!this.core.getAuthenticationMethod)return{success:!1,error:"Authentication method provider not available"};const i=this.core.getAuthenticationMethod("metamask");return i&&"object"==typeof i&&"login"in i?i.login(r):{success:!1,error:"MetaMask authentication not available"}}async authenticateWithWebAuthn(e,t){const r=e.controller.split(":").pop()||"";if("loginWithWebAuthn"in this.core)return this.core.loginWithWebAuthn(r);if(!this.core.getAuthenticationMethod)return{success:!1,error:"Authentication method provider not available"};const i=this.core.getAuthenticationMethod("webauthn");return i&&"object"==typeof i&&"login"in i?i.login(r):{success:!1,error:"WebAuthn authentication not available"}}async authenticateWithGunDB(e,t){try{(0,s.Rm)("Authenticating with GunDB using password method",e);let r=t??"";this.options&&this.options.useSecureRandomPassword&&!r&&(r=function(e=32){const t=new Uint8Array(e);return crypto.getRandomValues(t),Array.from(t,(e=>e.toString(16).padStart(2,"0"))).join("")}());const i=await async function(e,t){const r=(new TextEncoder).encode(`${e}:${t}`),i=await crypto.subtle.digest("SHA-256",r);return Array.from(new Uint8Array(i)).map((e=>e.toString(16).padStart(2,"0"))).join("")}(e,r);if(!this.core.getAuthenticationMethod)throw new Error("Authentication method provider not available");const a=this.core.getAuthenticationMethod("password");if(!a)throw new Error("Password authentication method not available");return await a.authenticate(e,i)}catch(e){throw(0,s.Rm)("Error authenticating with GunDB:",e),e}}async verifyDIDOnChain(e){try{const t=["function isDIDRegistered(string did) public view returns (bool)","function getDIDController(string did) public view returns (string)"],r="0x1234...",i=this.getWallet(),a=i?.provider||this.core.provider;if(!a)throw new Error("Provider non disponibile per verificare il DID on-chain");const n=new I.NZ(r,t,a);if(!await n.isDIDRegistered(e))return{isRegistered:!1};return{isRegistered:!0,controller:await n.getDIDController(e)}}catch(e){return(0,s.vV)("Error verifying DID on blockchain:",e),{isRegistered:!1,error:e instanceof Error?e.message:"Unknown error"}}}clearCache(){this.didCache.clear(),this.emit("cacheCleared")}removeFromCache(e){this.didCache.delete(e),this.emit("didRemovedFromCache",{did:e})}getDocumentFromCache(e){return e.data?e.data:e.document?e.document:null}}class A extends D.j{constructor(){super(...arguments),this.name="did",this.version="1.0.0",this.description="Provides Decentralized Identifiers (DID) functionality for ShogunCore",this.did=null}initialize(e){super.initialize(e),this.did=new S(e),(0,s.Rm)("DID plugin initialized")}destroy(){this.did=null,super.destroy(),(0,s.Rm)("DID plugin destroyed")}assertDID(){if(this.assertInitialized(),!this.did)throw new Error("DID module not initialized");return this.did}async getCurrentUserDID(){return this.assertDID().getCurrentUserDID()}async resolveDID(e){return this.assertDID().resolveDID(e)}async authenticateWithDID(e,t){return this.assertDID().authenticateWithDID(e,t)}async createDID(e){return this.assertDID().createDID(e)}async updateDIDDocument(e,t){return this.assertDID().updateDIDDocument(e,t)}async deactivateDID(e){return this.assertDID().deactivateDID(e)}async registerDIDOnChain(e,t){return this.assertDID().registerDIDOnChain(e,t)}async ensureUserHasDID(e){try{const t=this.core;if(!t)throw new Error("Core not available");if(!t.isLoggedIn())return(0,s.vV)("Cannot ensure DID: user not authenticated"),null;let r=await this.getCurrentUserDID();if(r){if((0,s.Rm)(`User already has DID: ${r}`),e&&Object.keys(e).length>0)try{await this.updateDIDDocument(r,{service:e.services?.map(((e,t)=>({id:`${r}#service-${t+1}`,type:e.type,serviceEndpoint:e.endpoint})))})&&(0,s.Rm)(`Updated DID document for: ${r}`)}catch(e){(0,s.vV)("Error updating DID document:",e)}return r}(0,s.Rm)("Creating new DID for authenticated user");const i=t.gundb.gun.user().is?.pub??"",a={network:"main",controller:i,...e};return r=await this.createDID(a),t.emit("did:created",{did:r,userPub:i}),(0,s.Rm)(`Created new DID for user: ${r}`),r||null}catch(e){return o.zc.handle(o.By.DID,"ENSURE_DID_FAILED",`Error ensuring user has DID: ${e instanceof Error?e.message:String(e)}`,e),null}}}var M=r(3011),P=(r(2682),r(4532));class T{constructor(e){this.lastEphemeralKeyPair=null,this.lastMethodUsed="unknown",this.STEALTH_HISTORY_KEY="stealthHistory",this.logs=[],this.STEALTH_DATA_TABLE="Stealth",this.storage=e||new h}log(e,t,r){const i={timestamp:(new Date).toISOString(),level:e,message:t,data:r};this.logs.push(i)}async cleanupSensitiveData(){try{this.lastEphemeralKeyPair=null,this.lastMethodUsed="unknown",this.logs=[],this.log("info","Sensitive data cleanup completed")}catch(e){throw this.log("error","Error during cleanup",e),e}}validateStealthData(e){try{if(!e||"object"!=typeof e)return this.log("error","Invalid stealth data: data is not an object"),!1;const t=["recipientPublicKey","ephemeralKeyPair","timestamp"];for(const r of t)if(!(r in e))return this.log("error",`Invalid stealth data: missing ${r}`),!1;if("string"!=typeof e.recipientPublicKey||!e.recipientPublicKey.trim())return this.log("error","Invalid recipientPublicKey"),!1;if("number"!=typeof e.timestamp||e.timestamp<=0)return this.log("error","Invalid timestamp"),!1;const r=["pub","priv","epub","epriv"];for(const t of r)if(!(t in e.ephemeralKeyPair)||"string"!=typeof e.ephemeralKeyPair[t])return this.log("error",`Invalid ephemeralKeyPair: missing or invalid ${t}`),!1;return e.method&&!["standard","legacy"].includes(e.method)?(this.log("error","Invalid method value"),!1):e.sharedSecret&&"string"!=typeof e.sharedSecret?(this.log("error","Invalid sharedSecret type"),!1):(this.log("debug","Stealth data validation passed"),!0)}catch(e){return this.log("error","Error during stealth data validation",e),!1}}formatPublicKey(e){if(!e)return null;const t=e.trim();return t&&/^[~]?[\w+/=\-_.]+$/.test(t)?t.startsWith("~")?t.slice(1):t:null}async createAccount(){try{const e=await Gun.SEA.pair();if(!(e&&e.pub&&e.priv&&e.epub&&e.epriv))throw new Error("Failed to generate stealth key pair");return{pub:e.pub,priv:e.priv,epub:e.epub,epriv:e.epriv}}catch(e){throw e}}async generateEphemeralKeyPair(){try{const e=await Gun.SEA.pair();if(!e||!e.epriv||!e.epub)throw new Error("Failed to generate ephemeral key pair");return{privateKey:e.epriv,publicKey:e.epub}}catch(e){throw this.log("error","Error generating ephemeral key pair",e),e}}async generateStealthAddress(e,t){if(!e){const e=new Error("Invalid keys: missing or invalid parameters");throw o.zc.handle(o.By.STEALTH,"INVALID_KEYS","Invalid or missing recipient public key",e),e}return new Promise(((r,i)=>{let a;const n=()=>{(0,s.MD)("Ephemeral keys generated:",a),this.lastEphemeralKeyPair=a;const t={recipientPublicKey:e,ephemeralKeyPair:a,timestamp:Date.now()},n={epub:a.epub,epriv:a.epriv};(0,s.MD)("Key format for secret (generation):",JSON.stringify(n)),Gun.SEA.secret(e,n,(async c=>{(0,s.MD)("Shared secret successfully generated with recipient keys"),(0,s.MD)("Input format used:",{recipientPublicKey:e,ephemeralKeyObject:n});try{const i=R.S(b.YW(c)),n=new P.u(i);(0,s.MD)("Stealth address generated:",{address:n.address,ephemeralPubKey:a.epub,recipientPublicKey:e}),this.lastMethodUsed="standard",t.method="standard",t.sharedSecret=c,this.saveStealthHistory(n.address,t),r({stealthAddress:n.address,ephemeralPublicKey:a.epub,recipientPublicKey:e})}catch(e){const t=new Error(`Error creating stealth address: ${e instanceof Error?e.message:"unknown error"}`);o.zc.handle(o.By.STEALTH,"ADDRESS_GENERATION_FAILED",`Error creating stealth address: ${e instanceof Error?e.message:"unknown error"}`,e),i(t)}}))};t?this.generateEphemeralKeyPair().then((e=>{try{a={epriv:t,epub:e.publicKey,priv:t,pub:e.publicKey},n()}catch(e){return o.zc.handle(o.By.STEALTH,"EPHEMERAL_KEY_GENERATION_FAILED","Failed to use provided ephemeral key",e),void i(e)}})):this.generateEphemeralKeyPair().then((e=>{try{const t={epriv:e.privateKey,epub:e.publicKey,priv:e.privateKey,pub:e.publicKey};a=t,n()}catch(e){return o.zc.handle(o.By.STEALTH,"EPHEMERAL_KEY_GENERATION_FAILED","Failed to generate valid ephemeral keys",e),void i(e)}}))}))}async openStealthAddress(e,t,r){(0,s.MD)(`Attempting to open stealth address ${e}`);try{const t=this.storage.getItem(this.STEALTH_HISTORY_KEY)||"{}",r=JSON.parse(t);(0,s.MD)(`Checking if data exists for address ${e} in storage`);const i=r[e];if(i){if((0,s.MD)("Found locally saved stealth data:",i),i.sharedSecret){(0,s.MD)("Direct derivation from saved shared secret");const e=R.S(b.YW(i.sharedSecret));return new P.u(e)}if(i.method&&i.ephemeralKeyPair){if((0,s.MD)("Attempting to regenerate secret with method:",i.method),"standard"===i.method){const t={epub:i.ephemeralKeyPair.epub,epriv:i.ephemeralKeyPair.epriv};return(0,s.MD)("Regenerating with explicit format:",JSON.stringify(t)),new Promise(((r,a)=>{Gun.SEA.secret(i.recipientPublicKey,t,(async t=>{if(t)try{const i=R.S(b.YW(t)),a=new P.u(i);if(a.address.toLowerCase()===e.toLowerCase())return(0,s.MD)("Regeneration successful! Matching address:",a.address),r(a);throw(0,s.MD)("Generated address does not match:",a.address),new Error("Address does not match")}catch(e){throw(0,s.vV)("Error during derivation:",e),new Error("Derivation error")}else a(new Error("Unable to regenerate shared secret"))}))}))}throw new Error("Method not supported")}throw new Error("Insufficient data")}throw(0,s.MD)("No stealth data found in storage for this address"),new Error("No data found")}catch(i){return(0,s.vV)("Error retrieving data from storage:",i),this.openStealthAddressStandard(e,t,r)}}async openStealthAddressStandard(e,t,r){if(!e||!t)throw new Error("Missing parameters: stealthAddress or ephemeralPublicKey");return(0,s.MD)("Opening stealth address with retrieved keys:",{stealthAddress:e,ephemeralPublicKey:t,userKeysFound:!!r}),new Promise(((i,a)=>{const n=[()=>((0,s.MD)("Attempt 1: Standard method with ephemeral keys"),new Promise((i=>{Gun.SEA.secret(t,r,(async t=>{try{if(!t)return i(null);const r=this.deriveWalletFromSecret(t);return r.address.toLowerCase()===e.toLowerCase()?i(r):i(null)}catch(e){return i(null)}}))})))];this.deriveWalletFromSecret=e=>{const t=R.S(b.YW(e));return new P.u(t)};const o=async(e=0)=>{if(e>=n.length)return a(new Error("All stealth address derivation methods failed"));const t=await n[e]();if(t)return(0,s.MD)(`Method ${e+1} worked!`),i(t);o(e+1)};o()}))}async getPublicKey(e){return this.formatPublicKey(e)}prepareStealthKeysForSaving(e){if(!(e?.pub&&e?.priv&&e?.epub&&e?.epriv))throw new Error("Invalid stealth keys: missing or incomplete parameters");return e}deriveWalletFromSecret(e){const t=R.S(b.YW(e));return new P.u(t)}saveStealthHistory(e,t){try{if(!this.validateStealthData(t))throw new Error("Invalid stealth data");const r=this.storage.getItem(this.STEALTH_HISTORY_KEY)??"{}",i=JSON.parse(r);i[e]=t,this.storage.setItem(this.STEALTH_HISTORY_KEY,JSON.stringify(i)),this.log("info",`Stealth data saved for address ${e}`)}catch(e){throw this.log("error","Error saving stealth data:",e),e}}async scanStealthAddresses(e,t){try{const r=[];for(const i of e)try{await this.isStealthAddressMine(i,t)&&r.push(i)}catch(e){this.log("error",`Error checking stealth address: ${e instanceof Error?e.message:"unknown error"}`)}return r}catch(e){throw this.log("error","Error scanning stealth addresses",e),e}}async isStealthAddressMine(e,t){try{if(!e||!t)throw new Error("Invalid parameters for stealth address check");if(!this.validateStealthData(e))throw new Error("Invalid stealth data format");const r=await this.getStealthPrivateKey(e,t);if(!r)return!1;try{const e=new P.u(r);return(0,s.MD)("Wallet derived:",e.address),!0}catch(e){return!1}}catch(e){throw this.log("error","Error checking stealth address ownership",e),e}}async getStealthPrivateKey(e,t){try{if(!e||!t)throw new Error("Invalid parameters for private key derivation");if(!this.validateStealthData(e))throw new Error("Invalid stealth data format");return e.sharedSecret?R.S(b.YW(e.sharedSecret)):new Promise(((r,i)=>{const a={priv:t,epub:e.ephemeralKeyPair.epub};Gun.SEA.secret(e.ephemeralKeyPair.epub,a,(e=>{if(e)try{const t=R.S(b.YW(e));r(t)}catch(e){i(new Error(`Error deriving private key: ${e instanceof Error?e.message:"unknown error"}`))}else i(new Error("Failed to generate shared secret"))}))}))}catch(e){throw this.log("error","Error getting stealth private key",e),e}}}"undefined"!=typeof window?window.Stealth=T:void 0!==r.g&&(r.g.Stealth=T);D.j;r(7160);var U,N=r(8650);!function(e){e.DEVICE_REGISTERED="deviceRegistered",e.DEVICE_REMOVED="deviceRemoved",e.AUTHENTICATION_SUCCESS="authenticationSuccess",e.AUTHENTICATION_FAILED="authenticationFailed",e.ERROR="error"}(U||(U={}));const C={rpName:"Shogun Wallet",timeout:6e4,userVerification:"preferred",attestation:"none",authenticatorAttachment:"platform",requireResidentKey:!1};class $ extends d.b{constructor(e,t){super(),this.abortController=null,this.gunInstance=e,this.credential=null,this.config={...C,...t,rpId:t?.rpId??window.location.hostname.split(":")[0]}}validateUsername(e){if(!e||"string"!=typeof e)throw new Error("Username must be a non-empty string");if(e.length<3||e.length>64)throw new Error("Username must be between 3 and 64 characters");if(!/^[a-zA-Z0-9_-]+$/.test(e))throw new Error("Username can only contain letters, numbers, underscores and hyphens")}async createAccount(e,t,r=!1){try{this.validateUsername(e);const i=3;let a=null;for(let n=1;n<=i;n++)try{const i=await this.generateCredentials(e,t,r);if(i.success)return this.emit(U.DEVICE_REGISTERED,{type:U.DEVICE_REGISTERED,data:{username:e,deviceInfo:i.deviceInfo},timestamp:Date.now()}),i;a=new Error(i.error??"Unknown error")}catch(e){if(a=e,n<i){await new Promise((e=>setTimeout(e,1e3*n)));continue}}throw a||new Error("Failed to create account after retries")}catch(e){throw this.emit(U.ERROR,{type:U.ERROR,data:{error:e.message},timestamp:Date.now()}),e}}async authenticateUser(e,t,r={}){try{if(this.validateUsername(e),!t){const e=new Error("No WebAuthn credentials found for this username");return o.zc.handle(o.By.WEBAUTHN,"NO_CREDENTIALS",e.message,e),{success:!1,error:e.message}}this.abortAuthentication(),this.abortController=new AbortController;const i=r.timeout||this.config.timeout,a=setTimeout((()=>this.abortController?.abort()),i);try{const a={challenge:this.generateChallenge(e),allowCredentials:[],timeout:i,userVerification:r.userVerification||this.config.userVerification,rpId:this.config.rpId},n=await navigator.credentials.get({publicKey:a,signal:this.abortController.signal});if(!n)throw new Error("WebAuthn verification failed");const{password:s}=this.generateCredentialsFromSalt(e,t),o=this.getDeviceInfo(n.id),c={success:!0,username:e,password:s,credentialId:this.bufferToBase64(n.rawId),deviceInfo:o};return this.emit(U.AUTHENTICATION_SUCCESS,{type:U.AUTHENTICATION_SUCCESS,data:{username:e,deviceInfo:o},timestamp:Date.now()}),c}finally{clearTimeout(a),this.abortController=null}}catch(t){const r=t instanceof Error?t.message:"Unknown WebAuthn error";return this.emit(U.AUTHENTICATION_FAILED,{type:U.AUTHENTICATION_FAILED,data:{username:e,error:r},timestamp:Date.now()}),o.zc.handle(o.By.WEBAUTHN,"AUTH_ERROR",r,t),{success:!1,error:r}}}abortAuthentication(){this.abortController&&(this.abortController.abort(),this.abortController=null)}getDeviceInfo(e){const t=this.getPlatformInfo();return{deviceId:e,timestamp:Date.now(),name:t.name,platform:t.platform,lastUsed:Date.now()}}getPlatformInfo(){if("undefined"==typeof navigator)return{name:"unknown",platform:"unknown"};const e=navigator.platform,t=navigator.userAgent;return/iPhone|iPad|iPod/.test(e)?{name:"iOS Device",platform:e}:/Android/.test(t)?{name:"Android Device",platform:e}:/Win/.test(e)?{name:"Windows Device",platform:e}:/Mac/.test(e)?{name:"Mac Device",platform:e}:/Linux/.test(e)?{name:"Linux Device",platform:e}:{name:"Unknown Device",platform:e}}generateChallenge(e){const t=Date.now().toString(),r=this.getRandomBytes(32),i=`${e}-${t}-${this.uint8ArrayToHex(r)}`;return(new TextEncoder).encode(i)}getRandomBytes(e){if("undefined"!=typeof window&&window.crypto)return window.crypto.getRandomValues(new Uint8Array(e));throw new Error("No cryptographic implementation available")}uint8ArrayToHex(e){return Array.from(e).map((e=>e.toString(16).padStart(2,"0"))).join("")}bufferToBase64(e){const t=new Uint8Array(e).reduce(((e,t)=>e+String.fromCharCode(t)),"");return btoa(t).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}generateCredentialsFromSalt(e,t){const r=b.YW(e+t);return{password:N.s(r)}}isSupported(){return"undefined"!=typeof window&&void 0!==window.PublicKeyCredential}async createCredential(e){try{const t=crypto.getRandomValues(new Uint8Array(32)),r=(new TextEncoder).encode(e),i={challenge:t,rp:{name:"Shogun Wallet",..."localhost"!==this.config.rpId&&{id:this.config.rpId}},user:{id:r,name:e,displayName:e},pubKeyCredParams:[{type:"public-key",alg:-7}],timeout:this.config.timeout,attestation:this.config.attestation,authenticatorSelection:{authenticatorAttachment:this.config.authenticatorAttachment,userVerification:this.config.userVerification,requireResidentKey:this.config.requireResidentKey}};(0,s.MD)("Attempting to create credentials with options:",i);const a=await navigator.credentials.create({publicKey:i});if(!a)throw new Error("Credential creation failed");(0,s.MD)("Credentials created successfully:",a);const n=a,o={id:n.id,rawId:n.rawId,type:n.type,response:{clientDataJSON:n.response.clientDataJSON},getClientExtensionResults:n.getClientExtensionResults};return"attestationObject"in n.response&&(o.response.attestationObject=n.response.attestationObject),this.credential=o,o}catch(e){(0,s.vV)("Detailed error in credential creation:",e);const t=e instanceof Error?e.message:"Unknown error";throw new Error(`Error creating credentials: ${t}`)}}async generateCredentials(e,t,r=!1){try{if(r){const t=await this.verifyCredential(e);return{success:t.success,error:t.error,credentialId:t.credentialId,username:t.username}}{const t=await this.createCredential(e),r=t.id;let i=null;return t?.response?.getPublicKey&&(i=t.response.getPublicKey()),{success:!0,credentialId:r,publicKey:i}}}catch(e){(0,s.vV)("Error in generateCredentials:",e);return{success:!1,error:e instanceof Error?e.message:"Unknown error during WebAuthn operation"}}}async verifyCredential(e){try{const t={challenge:crypto.getRandomValues(new Uint8Array(32)),timeout:this.config.timeout,userVerification:this.config.userVerification,..."localhost"!==this.config.rpId&&{rpId:this.config.rpId}};this.credential?.rawId&&(t.allowCredentials=[{id:this.credential.rawId,type:"public-key"}]);const r=await navigator.credentials.get({publicKey:t});return r?{success:!0,credentialId:r.id,username:e}:{success:!1,error:"Credential verification failed"}}catch(e){(0,s.vV)("Error verifying credentials:",e);return{success:!1,error:e instanceof Error?e.message:"Unknown error verifying credentials"}}}async saveToGun(e,t){if(this.gunInstance)try{await this.gunInstance.get(`webauthn_${e}`).put({credentialId:t.id,type:t.type,timestamp:Date.now()})}catch(e){(0,s.vV)("Error saving credentials to Gun:",e)}}async removeDevice(e,t,r){if(!r||!r.credentials||!r.credentials[t])return{success:!1};const i={...r};return i.credentials&&delete i.credentials[t],{success:!0,updatedCredentials:i}}async sign(e){return await navigator.credentials.get({publicKey:{challenge:new Uint8Array(16),rpId:this.config.rpId}})}}"undefined"!=typeof window?window.Webauthn=$:void 0!==r.g&&(r.g.Webauthn=$);D.j;class W{constructor(e){if(this.plugins=new Map,(0,s.Rm)("Initializing ShogunSDK"),this.config=e,e.logging&&((0,s.yM)(e.logging),(0,s.Rm)("Logging configured with custom settings")),this.storage=new h,this.eventEmitter=new d.b,o.zc.addListener((e=>{this.eventEmitter.emit("error",{action:e.code,message:e.message,type:e.type})})),e.gundb||(e.gundb={},(0,s.Rm)("No GunDB configuration provided, using defaults")),e.gundb.authToken){const t=e.gundb.authToken;(0,s.Rm)(`Auth token from config: ${t}`)}else(0,s.Rm)("No auth token in config");const t={peers:e.gundb?.peers,websocket:e.gundb?.websocket??!1,localStorage:e.gundb?.localStorage??!1,radisk:e.gundb?.radisk??!1,authToken:e.gundb?.authToken,multicast:e.gundb?.multicast??!1,axe:e.gundb?.axe??!1};if(this.gundb=new c(t),this.gun=this.gundb.getGun(),this.user=this.gun.user().recall({sessionStorage:!0}),this.rx=new f(this.gun),e.providerUrl?(this.provider=new g.FR(e.providerUrl),(0,s.Rm)(`Using configured provider URL: ${e.providerUrl}`)):(this.provider=m.x("mainnet"),(0,s.Rm)("WARNING: Using default Ethereum provider. For production use, configure a specific provider URL.")),this.registerBuiltinPlugins(e),e.plugins?.autoRegister&&e.plugins.autoRegister.length>0)for(const t of e.plugins.autoRegister)try{this.register(t),(0,s.Rm)(`Auto-registered plugin: ${t.name}`)}catch(e){(0,s.vV)(`Failed to auto-register plugin ${t.name}:`,e)}(0,s.Rm)("ShogunSDK initialized!")}registerBuiltinPlugins(e){try{if(e.webauthn?.enabled){const e=new y.WebauthnPlugin;e._category=l.Authentication,this.register(e),(0,s.Rm)("Webauthn plugin registered")}if(e.metamask?.enabled){const e=new v.MetaMaskPlugin;e._category=l.Authentication,this.register(e),(0,s.Rm)("MetaMask plugin registered")}if(e.stealth?.enabled){const e=new E.StealthPlugin;e._category=l.Privacy,this.register(e),(0,s.Rm)("Stealth plugin registered")}if(e.did?.enabled){const e=new A;e._category=l.Identity,this.register(e),(0,s.Rm)("DID plugin registered")}if(e.walletManager?.enabled){const e=new M.WalletPlugin;e._category=l.Wallet,this.register(e),(0,s.Rm)("Wallet plugin registered")}}catch(e){(0,s.vV)("Error registering builtin plugins:",e)}}register(e){if(this.plugins.has(e.name))throw new Error(`Plugin with name "${e.name}" already registered`);e.initialize(this),this.plugins.set(e.name,e),(0,s.Rm)(`Registered plugin: ${e.name}`)}unregister(e){const t=this.plugins.get(e);t?(t.destroy&&t.destroy(),this.plugins.delete(e),(0,s.Rm)(`Unregistered plugin: ${e}`)):(0,s.Rm)(`Plugin "${e}" not found, nothing to unregister`)}getPlugin(e){return this.plugins.get(e)}hasPlugin(e){return this.plugins.has(e)}getPluginsByCategory(e){const t=[];return this.plugins.forEach((r=>{r._category===e&&t.push(r)})),t}getAuthenticationMethod(e){switch(e){case"webauthn":return this.getPlugin(u.WebAuthn);case"metamask":return this.getPlugin(u.MetaMask);default:return{login:(e,t)=>this.login(e,t),signUp:(e,t,r)=>this.signUp(e,t,r)}}}observe(e){return this.rx.observe(e)}match(e,t){return this.rx.match(e,t)}rxPut(e,t){return this.rx.put(e,t)}rxSet(e,t){return this.rx.set(e,t)}onceObservable(e){return this.rx.once(e)}compute(e,t){return this.rx.compute(e,t)}rxUserPut(e,t){return this.rx.userPut(e,t)}observeUser(e){return this.rx.observeUser(e)}getRecentErrors(e=10){return o.zc.getRecentErrors(e)}configureLogging(e){(0,s.yM)(e),(0,s.Rm)("Logging reconfigured with new settings")}isLoggedIn(){const e=this.gundb.isLoggedIn(),t=this.gun.user();if(e)return!0;const r=t&&t._&&t._.sea,i=this.storage.getItem("pair");return!!r||!!i}logout(){try{if(!this.isLoggedIn())return void(0,s.Rm)("Logout ignored: user not authenticated");this.gundb.logout(),this.eventEmitter.emit("auth:logout",{}),(0,s.Rm)("Logout completed successfully")}catch(e){o.zc.handle(o.By.AUTHENTICATION,"LOGOUT_FAILED",e instanceof Error?e.message:"Error during logout",e)}}async login(e,t){(0,s.Rm)("Login");try{if((0,s.Rm)(`Login attempt for user: ${e}`),!e||!t)return{success:!1,error:"Username and password are required"};const r=new Promise((r=>{this.gundb.gun.user().auth(e,t,(t=>{if(t.err)(0,s.Rm)(`Login error: ${t.err}`),r({success:!1,error:t.err});else{const t=this.gundb.gun.user();if(t.is){(0,s.Rm)("Login completed successfully");const i=t.is?.pub||"";r({success:!0,userPub:i,username:e})}else r({success:!1,error:"Login failed: user not authenticated"})}}))})),i=this.config?.timeouts?.login??15e3,a=new Promise((e=>{setTimeout((()=>{e({success:!1,error:"Login timeout"})}),i)})),n=await Promise.race([r,a]);if(n.success){this.eventEmitter.emit("auth:login",{userPub:n.userPub??""});try{const e=await this.ensureUserHasDID();e&&(n.did=e)}catch(e){(0,s.vV)("Error ensuring DID after login:",e)}}return n}catch(e){return o.zc.handle(o.By.AUTHENTICATION,"LOGIN_FAILED",e.message??"Unknown error during login",e),{success:!1,error:e.message??"Unknown error during login"}}}async signUp(e,t,r){(0,s.Rm)("Sign up");try{if(!e||!t)return{success:!1,error:"Username and password are required"};if(void 0!==r&&t!==r)return{success:!1,error:"Passwords do not match"};if(t.length<6)return{success:!1,error:"Password must be at least 6 characters long"};const i=new Promise((r=>{this.gundb.gun.user().create(e,t,(i=>{i.err?r({success:!1,error:i.err}):this.gundb.gun.user().auth(e,t,(t=>{if(t.err)r({success:!1,error:"Registration completed but login failed"});else{const t=this.gundb.gun.user();t.is?r({success:!0,userPub:t.is?.pub||"",username:e||""}):r({success:!1,error:"Registration completed but user not authenticated"})}}))}))})),a=this.config?.timeouts?.signup??2e4,n=new Promise((e=>{setTimeout((()=>{e({success:!1,error:"Registration timeout"})}),a)})),o=await Promise.race([i,n]);if(o.success){this.eventEmitter.emit("auth:signup",{userPub:o.userPub??"",username:e});try{const e=await this.ensureUserHasDID();e&&((0,s.Rm)(`Created DID for new user: ${e}`),o.did=e)}catch(e){(0,s.vV)("Error creating DID for new user:",e)}}return o}catch(t){return(0,s.vV)(`Error during registration for user ${e}:`,t),{success:!1,error:t.message??"Unknown error during registration"}}}async ensureUserHasDID(e){try{const t=this.getPlugin("did");return t?await t.ensureUserHasDID(e):((0,s.Rm)("DID plugin not available, cannot ensure DID"),null)}catch(e){return(0,s.vV)("Error ensuring user has DID:",e),null}}createUserWithGunDB(e,t){return(0,s.Rm)(`Ensuring user exists with GunDB: ${e}`),new Promise((async r=>{try{const i=()=>new Promise((r=>{try{this.gundb.logout()}catch(e){}this.gundb.gun.user().auth(e,t,(e=>{if(e.err)r({err:e.err});else{const e=this.gundb.gun.user(),t=e.is?.pub||"";e.is&&t?r({pub:t}):r({err:"Authentication failed after apparent success."})}}))})),a=()=>new Promise((r=>{try{this.gundb.logout()}catch(e){}this.gundb.gun.user().create(e,t,(e=>{r({err:e.err,pub:e.pub})}))}));(0,s.Rm)(`Attempting login first for ${e}...`);let n=await i();if(n.pub)return(0,s.Rm)(`Login successful for existing user. Pub: ${n.pub}`),void r({success:!0,userPub:n.pub});(0,s.Rm)(`Login failed (${n.err??"unknown reason"}), attempting user creation...`);const o=await a();if(o.err)return(0,s.Rm)(`User creation error: ${o.err}`),void r({success:!1,error:`User creation failed: ${o.err}`});(0,s.Rm)("User created successfully, attempting login again for confirmation..."),n=await i(),n.pub?((0,s.Rm)(`Post-creation login successful! User pub: ${n.pub}`),r({success:!0,userPub:n.pub})):((0,s.vV)(`Post-creation login failed unexpectedly: ${n.err}`),r({success:!1,error:`User created, but subsequent login failed: ${n.err}`}))}catch(e){const t=e.message??"Unknown error during user existence check";(0,s.vV)(`Error in createUserWithGunDB: ${t}`,e),r({success:!1,error:t})}}))}get(e){return new Promise(((t,r)=>{this.gundb.gun.get(e).once((e=>{e.err?r(e.err):t(e)}))}))}put(e){return new Promise(((t,r)=>{this.gundb.gun.put(e,(e=>{e.err?r(e.err):t(e)}))}))}userPut(e){return new Promise(((t,r)=>{this.gundb.gun.user().put(e,(e=>{e.err?r(e.err):t(e)}))}))}userGet(e){return new Promise(((t,r)=>{this.gundb.gun.user().get(e).once((e=>{e.err?r(e.err):t(e)}))}))}setRpcUrl(e){try{return e?(this.provider=new g.FR(e),(0,s.Rm)(`RPC URL updated to: ${e}`),!0):((0,s.Rm)("Invalid RPC URL provided"),!1)}catch(e){return(0,s.vV)("Failed to set RPC URL",e),!1}}getRpcUrl(){return this.provider instanceof g.FR?this.provider.connection?.url??null:null}emit(e,t){return this.eventEmitter.emit(e,t)}on(e,t){return this.eventEmitter.on(e,t),this}once(e,t){return this.eventEmitter.once(e,t),this}off(e,t){return this.eventEmitter.off(e,t),this}removeAllListeners(e){return this.eventEmitter.removeAllListeners(e),this}}W.API_VERSION="2.0.0";let k;const O={loadWebAuthn:()=>Promise.resolve().then(r.bind(r,409)),loadStealth:()=>Promise.resolve().then(r.bind(r,2256)),loadDID:()=>r.e(662).then(r.bind(r,4662)),loadWallet:()=>Promise.resolve().then(r.bind(r,3011)),loadMetaMask:()=>Promise.resolve().then(r.bind(r,8991))};"undefined"!=typeof window&&(window.ShogunCore=k,window.initShogunBrowser=function(e){const t={...e};return t.gundb??(t.gundb={}),e.gundb?.peers||(0,s.Rm)("WARNING: Using default GunDB peers. For production, always configure custom peers."),e.providerUrl||(0,s.Rm)("WARNING: No Ethereum provider URL specified. Using default public endpoint with rate limits."),k=new W(t),k.hasPlugin(u.WebAuthn)&&(0,s.Rm)("WebAuthn plugin initialized",{category:"init",level:"info"}),k.hasPlugin(u.MetaMask)&&(0,s.Rm)("MetaMask plugin initialized",{category:"init",level:"info"}),k.hasPlugin(u.WalletManager)&&(0,s.Rm)("Wallet plugin initialized",{category:"init",level:"info"}),k},window.ShogunModules=O)},2682:(e,t,r)=>{"use strict";r.d(t,{T:()=>w});var i,a=r(5628),n=r(8030),s=r.n(n),o=r(8051),c=r(4050),l=r(7514),u=r(7761),d=r(4532),h=r(9770),g=r(7649),m=r(1442),p=r(4134);!function(e){e.WALLET_CREATED="walletCreated",e.WALLET_IMPORTED="walletImported",e.BALANCE_UPDATED="balanceUpdated",e.TRANSACTION_SENT="transactionSent",e.TRANSACTION_CONFIRMED="transactionConfirmed",e.ERROR="error"}(i||(i={}));class w extends p.b{constructor(e,t,r){super(),this.walletPaths={},this.mainWallet=null,this.balanceCache=new Map,this.pendingTransactions=new Map,this.gun=e,this.storage=t,this.config={balanceCacheTTL:3e4,rpcUrl:"",defaultGasLimit:21e3,maxRetries:3,retryDelay:1e3,...r},this.initWalletPathsSync(),this.setupTransactionMonitoring()}initWalletPathsSync(){try{this.walletPaths={},this.loadWalletPathsFromLocalStorage(),(0,a.Rm)("Wallet paths initialized synchronously. Async loading will occur on first use.")}catch(e){(0,a.vV)("Error in synchronous wallet path initialization:",e),(0,a.Rm)("Will attempt async initialization on first use")}}async initializeWalletPaths(){try{this.walletPaths={},await this.loadWalletPathsFromGun(),this.loadWalletPathsFromLocalStorage();const e=Object.keys(this.walletPaths).length;0===e?(0,a.Rm)("No wallet paths found, new wallets will be created when needed"):(0,a.Rm)(`Initialized ${e} wallet paths`)}catch(e){throw(0,a.vV)("Error initializing wallet paths:",e),new Error(`Failed to initialize wallet paths: ${e instanceof Error?e.message:String(e)}`)}}loadWalletPathsFromLocalStorage(){const e=`shogun_wallet_paths_${this.getStorageUserIdentifier()}`,t=this.storage.getItem(e);if(t)try{(0,a.Rm)("Found wallet paths in localStorage");const e=JSON.parse(t);Object.entries(e).forEach((([e,t])=>{this.walletPaths[e]||(this.walletPaths[e]=t,(0,a.Rm)(`Loaded path from localStorage for wallet: ${e}`))}))}catch(e){(0,a.vV)("Error parsing wallet paths from localStorage:",e)}}async loadWalletPathsFromGun(){const e=this.gun.user();return e?.is?((0,a.Rm)(`Loading wallet paths from GUN for user: ${e.is.alias}`),new Promise((t=>{e.get("wallet_paths").once((e=>{if(!e)return(0,a.Rm)("No wallet paths found in GUN"),void t();(0,a.Rm)(`Found wallet paths in GUN: ${Object.keys(e).length-1} wallets`),Object.entries(e).forEach((([e,t])=>{if("_"!==e&&t){const r=t;r?.path&&(this.walletPaths[e]={path:r.path,created:r.created||Date.now()},(0,a.Rm)(`Loaded path for wallet: ${e} -> ${r.path}`))}})),t()}))}))):((0,a.Rm)("User not authenticated on Gun, cannot load wallet paths from Gun"),Promise.resolve())}setupTransactionMonitoring(){setInterval((()=>{null!==this.getProvider()&&this.checkPendingTransactions()}),15e3)}async checkPendingTransactions(){const e=this.getProvider();for(const[t,r]of this.pendingTransactions)try{const a=await e.getTransactionReceipt(t);a&&(1===a.status?this.emit(i.TRANSACTION_CONFIRMED,{type:i.TRANSACTION_CONFIRMED,data:{txHash:t,receipt:a},timestamp:Date.now()}):this.emit(i.ERROR,{type:i.ERROR,data:{txHash:t,error:"Transaction failed"},timestamp:Date.now()}),this.pendingTransactions.delete(t),this.invalidateBalanceCache(r.from),r.to&&this.invalidateBalanceCache(r.to))}catch(e){(0,a.vV)(`Error checking transaction ${t}:`,e)}}setRpcUrl(e){this.config.rpcUrl=e,(0,a.Rm)(`RPC Provider configured: ${e}`)}getProvider(){if(!this.config.rpcUrl)throw new Error("RPC URL not configured");return new o.FR(this.config.rpcUrl)}getStorageUserIdentifier(){const e=this.gun.user(),t=e?.is?.pub;return t?t.substring(0,12):"guest"}saveWalletPathsToLocalStorage(){try{const e=`shogun_wallet_paths_${this.getStorageUserIdentifier()}`,t=JSON.stringify(this.walletPaths);this.storage.setItem(e,t),(0,a.Rm)(`Saved ${Object.keys(this.walletPaths).length} wallet paths to localStorage`)}catch(e){(0,a.vV)("Error saving wallet paths to localStorage:",e)}}derivePrivateKeyFromMnemonic(e,t){try{(0,a.Rm)(`Deriving wallet from path: ${t}`);const r=c.QX.fromMnemonic(l.v.fromPhrase(e),t);if(!r||!r.privateKey)throw new Error(`Unable to derive wallet for path ${t}`);return r}catch(e){throw(0,a.vV)(`Error deriving wallet for path ${t}:`,e),new Error(`Unable to derive wallet for path ${t}`)}}generateNewMnemonic(){return l.v.fromEntropy(u.p(16)).phrase}getStandardBIP44Addresses(e,t=5){try{(0,a.Rm)("Standard BIP-44 derivation from mnemonic");const r=[];for(let i=0;i<t;i++){const t=`m/44'/60'/0'/0/${i}`,n=c.QX.fromMnemonic(l.v.fromPhrase(e),t);r.push(n.address),(0,a.Rm)(`Address ${i}: ${n.address} (${t})`)}return r}catch(e){return(0,a.Rm)(`Error calculating BIP-44 addresses: ${e}`),[]}}generatePrivateKeyFromString(e){try{const t=(new TextEncoder).encode(e),r=e=>{let t=3735928559,r=1103547991;for(let i=0;i<e.length;i++)t=Math.imul(t^e[i],2654435761),r=Math.imul(r^e[i],1597334677);t=Math.imul(t^t>>>16,2246822507),t=Math.imul(t^t>>>13,3266489909),r=Math.imul(r^r>>>16,2246822507),r=Math.imul(r^r>>>13,3266489909);const i=new Uint8Array(32);for(let e=0;e<4;e++)i[e]=t>>8*e&255;for(let e=0;e<4;e++)i[e+4]=r>>8*e&255;for(let e=8;e<32;e++)i[e]=255&(i[e%8]^i[(e-1)%8]);return i},i=r(t);return"0x"+Array.from(i).map((e=>e.toString(16).padStart(2,"0"))).join("")}catch(e){(0,a.vV)("Error generating private key:",e);return"0x"+Array.from({length:32}).map((()=>Math.floor(256*Math.random()).toString(16).padStart(2,"0"))).join("")}}getMainWallet(){try{if(!this.mainWallet){const e=this.gun.user();if(!e||!e.is)return(0,a.Rm)("getMainWallet: User not authenticated"),null;if(!(e._&&e._.sea&&e._.sea.priv&&e._.sea.pub)){if((0,a.Rm)("getMainWallet: Insufficient user data",JSON.stringify({hasUserData:!!e._,hasSea:!(!e._||!e._.sea),hasPriv:!!(e._&&e._.sea&&e._.sea.priv),hasPub:!!(e._&&e._.sea&&e._.sea.pub)})),e.is.alias&&e.is.alias.startsWith("0x")){(0,a.Rm)("getMainWallet: MetaMask user detected, using alternative approach");const t=`metamask-${e.is.alias}-${Date.now()}`,r=this.generatePrivateKeyFromString(t);return this.mainWallet=new d.u(r),this.mainWallet}return null}const t=e._.sea.priv,r=e._.sea.pub,i=`${t}|${r}|${e.is.alias}`,n=this.generatePrivateKeyFromString(i);this.mainWallet=new d.u(n)}return this.mainWallet}catch(e){return(0,a.vV)("Error retrieving main wallet:",e),null}}async encryptSensitiveData(e){try{const t=this.gun.user();if(t&&t._&&t._.sea){const r=await s().encrypt(e,t._.sea);return JSON.stringify(r)}{const t=`shogun-encrypt-${this.getStorageUserIdentifier()}-key`,r=await s().encrypt(e,t);return JSON.stringify(r)}}catch(t){return(0,a.vV)("Error encrypting data:",t),(0,a.Rm)("WARNING: Sensitive data saved without encryption"),`unencrypted:${e}`}}async decryptSensitiveData(e){try{if(e.startsWith("unencrypted:"))return e.substring(12);const t=JSON.parse(e),r=this.gun.user();if(r&&r._&&r._.sea){return await s().decrypt(t,r._.sea)}{const e=`shogun-encrypt-${this.getStorageUserIdentifier()}-key`;return await s().decrypt(t,e)}}catch(e){return(0,a.vV)("Error decrypting data:",e),null}}async getUserMasterMnemonic(){try{const e=this.gun.user();if(e&&e.is){const t=await new Promise((t=>{e.get("master_mnemonic").once((e=>{t(e||null)}))}));if(t)return(0,a.Rm)("Mnemonic retrieved from GunDB"),(0,a.Rm)("gunMnemonic: ",t),t}const t=`shogun_master_mnemonic_${this.getStorageUserIdentifier()}`,r=this.storage.getItem(t);if(!r)return(0,a.Rm)("No mnemonic found in either GunDB or localStorage"),null;const i=await this.decryptSensitiveData(r);return(0,a.Rm)("Mnemonic retrieved from localStorage"),i&&e&&e.is&&(await e.get("master_mnemonic").put(i),(0,a.Rm)("Mnemonic from localStorage synced to GunDB")),i}catch(e){return(0,a.vV)("Error retrieving mnemonic:",e),null}}async saveUserMasterMnemonic(e){try{const t=this.gun.user();t&&t.is&&(await t.get("master_mnemonic").put(e),(0,a.Rm)("Mnemonic saved to GunDB"));const r=`shogun_master_mnemonic_${this.getStorageUserIdentifier()}`,i=await this.encryptSensitiveData(e);this.storage.setItem(r,i),(0,a.Rm)("Encrypted mnemonic also saved to localStorage as backup")}catch(e){throw(0,a.vV)("Error saving mnemonic:",e),e}}async createWallet(){try{const e=this.gun.user();if(!e.is)throw new Error("User is not authenticated");const t=Object.values(this.walletPaths).length,r=`m/44'/60'/0'/0/${t}`;let i,n=await this.getUserMasterMnemonic();if(!n)try{n=this.generateNewMnemonic(),await this.saveUserMasterMnemonic(n),(0,a.Rm)(`Generated new mnemonic: ${n}`)}catch(e){throw new Error(`Failed to generate or save mnemonic: ${e instanceof Error?e.message:String(e)}`)}(0,a.Rm)("*** masterMnemonic: ",n);try{i=this.derivePrivateKeyFromMnemonic(n,r),(0,a.Rm)(`Derived wallet for path ${r} with address ${i.address}`)}catch(e){throw new Error(`Failed to derive wallet: ${e instanceof Error?e.message:String(e)}`)}const s=Date.now();this.walletPaths[i.address]={path:r,created:s};try{await e.get("wallet_paths").get(i.address).put({path:r,created:s}),this.saveWalletPathsToLocalStorage()}catch(e){(0,a.vV)("Error saving wallet path:",e),(0,a.Rm)("Wallet created but path might not be persisted properly")}return{wallet:i,path:r,address:i.address,getAddressString:()=>i.address}}catch(e){throw(0,a.vV)("Error creating wallet:",e),new Error(`Failed to create wallet: ${e instanceof Error?e.message:String(e)}`)}}async loadWallets(){try{if(!this.gun.user())throw(0,a.vV)("loadWallets: No Gun user available"),new Error("Gun user not available");try{await this.initializeWalletPaths()}catch(e){(0,a.vV)("Error initializing wallet paths, proceeding with available wallets:",e),(0,a.Rm)("Will attempt to continue with any available wallet data")}let e=await this.getUserMasterMnemonic();if(!e){(0,a.Rm)("No mnemonic found, creating default wallet...");return[await this.createWallet()]}(0,a.Rm)(`masterMnemonic found: ${e}`);const t=[];for(const[r,i]of Object.entries(this.walletPaths))try{const n=this.derivePrivateKeyFromMnemonic(e,i.path||`m/44'/60'/0'/0/${r.substring(0,6)}`);(0,a.Rm)(`Derived wallet for path ${i.path||"fallback"} with address ${n.address}`),n.address.toLowerCase()!==r.toLowerCase()&&(0,a.JE)(`Warning: derived address (${n.address}) does not match saved address (${r})`),t.push({wallet:n,path:i.path||`m/44'/60'/0'/0/${n.address.substring(0,8)}`,address:n.address,getAddressString:()=>n.address})}catch(e){(0,a.vV)(`Error deriving wallet ${r}:`,e)}return t.length>0&&(this.mainWallet=t[0].wallet),t}catch(e){throw(0,a.vV)("Error loading wallets:",e),new Error(`Failed to load wallets: ${e instanceof Error?e.message:String(e)}`)}}async getBalance(e){try{const t=e.address,r=Date.now(),a=this.balanceCache.get(t);if(a&&r-a.timestamp<this.config.balanceCacheTTL)return a.balance;const n=this.getProvider(),s=await n.getBalance(t),o=h.ck(s);return this.balanceCache.set(t,{balance:o,timestamp:r}),this.emit(i.BALANCE_UPDATED,{type:i.BALANCE_UPDATED,data:{address:t,balance:o},timestamp:r}),o}catch(e){return(0,a.vV)("Error getting balance:",e),"0.0"}}invalidateBalanceCache(e){this.balanceCache.delete(e),(0,a.Rm)(`Balance cache invalidated for ${e}`)}async getNonce(e){const t=this.getProvider();return await t.getTransactionCount(e.address)}async sendTransaction(e,t,r,n={}){try{const a=this.getProvider();e=e.connect(a);const s=await a.getFeeData(),o={to:t,value:h.g5(r),gasLimit:n.gasLimit||this.config.defaultGasLimit,nonce:n.nonce||await a.getTransactionCount(e.address),maxFeePerGas:n.maxFeePerGas?h.XS(n.maxFeePerGas,"gwei"):s.maxFeePerGas,maxPriorityFeePerGas:n.maxPriorityFeePerGas?h.XS(n.maxPriorityFeePerGas,"gwei"):s.maxPriorityFeePerGas};for(let t=1;t<=(this.config.maxRetries||3);t++)try{const t=await e.sendTransaction(o);return this.pendingTransactions.set(t.hash,t),this.emit(i.TRANSACTION_SENT,{type:i.TRANSACTION_SENT,data:{txHash:t.hash,tx:o},timestamp:Date.now()}),t.hash}catch(r){if(t===this.config.maxRetries)throw r;await new Promise((e=>setTimeout(e,this.config.retryDelay))),o.nonce=await a.getTransactionCount(e.address);const i=await a.getFeeData();o.maxFeePerGas=i.maxFeePerGas,o.maxPriorityFeePerGas=i.maxPriorityFeePerGas}throw new Error("Transaction failed after all retry attempts")}catch(t){throw(0,a.vV)("Error sending transaction:",t),this.emit(i.ERROR,{type:i.ERROR,data:{error:t,wallet:e.address},timestamp:Date.now()}),t}}async signMessage(e,t){try{return await e.signMessage(t)}catch(e){throw(0,a.vV)("Error signing message:",e),e}}verifySignature(e,t){return g.l(e,t)}async signTransaction(e,t,r,i){try{(0,a.Rm)(`Signing transaction from wallet ${e.address} to ${t} for ${r} ETH`);const n=i||this.getProvider(),s=await n.getTransactionCount(e.address);(0,a.Rm)(`Nonce for transaction: ${s}`);const o=await n.getFeeData(),c={nonce:s,to:t,value:h.g5(r),gasPrice:o.gasPrice,gasLimit:21e3},l=await e.signTransaction(c);return(0,a.Rm)("Transaction signed successfully"),l}catch(e){throw(0,a.vV)("Error signing transaction:",e),e}}resetMainWallet(){(0,a.Rm)("Resetting main wallet"),this.mainWallet=null}async exportMnemonic(e){try{(0,a.Rm)("⚠️ SECURITY WARNING: Exporting mnemonic phrase - handle with extreme care!");const t=await this.getUserMasterMnemonic();if(!t)throw new Error("No mnemonic available for this user");return e?this.encryptSensitiveData(t):t}catch(e){throw(0,a.vV)("Error exporting mnemonic:",e),e}}async exportWalletKeys(e){try{if((0,a.Rm)("⚠️ SECURITY WARNING: Exporting wallet private keys - handle with extreme care!"),!this.isUserAuthenticated())throw new Error("User must be authenticated to export wallet keys");const t=await this.loadWallets();if(0===t.length)throw new Error("No wallets found to export");const r=t.map((e=>{const t=e.wallet;return{address:t.address,privateKey:t.privateKey,path:e.path,created:this.walletPaths[t.address]?.created||Date.now()}})),i=JSON.stringify(r);return e?this.encryptSensitiveData(i):i}catch(e){throw(0,a.vV)("Error exporting wallet keys:",e),e}}async exportGunPair(e){try{if((0,a.Rm)("⚠️ SECURITY WARNING: Exporting GunDB pair - handle with extreme care!"),!this.isUserAuthenticated())throw new Error("User must be authenticated to export GunDB pair");const t=this.gun.user()._.sea;if(!t)throw new Error("No GunDB pair available for this user");const r=JSON.stringify(t);return e?this.encryptSensitiveData(r):r}catch(e){throw(0,a.vV)("Error exporting GunDB pair:",e),e}}async exportAllUserData(e){if(!e)throw new Error("È richiesta una password per esportare tutti i dati");try{const t=await this.getUserMasterMnemonic(),r=await this.loadWallets(),i=this.gun.user();if(!i||!i._||!i._.sea)throw new Error("Utente non autenticato o dati non disponibili");const a=r.map((e=>{const t=e.address||"";return{address:t,privateKey:e.wallet.privateKey,path:e.path,created:t&&this.walletPaths[t]?.created||Date.now()}})),n={user:{alias:i.is.alias,pub:i.is.pub,pair:i._.sea},mnemonic:t,wallets:a,version:"1.0",exportedAt:(new Date).toISOString(),appName:"Shogun Wallet"},o=await s().encrypt(JSON.stringify(n),e);return JSON.stringify({type:"encrypted-shogun-backup",data:o,version:"1.0"})}catch(e){throw(0,a.vV)("Errore nell'esportazione di tutti i dati utente:",e),e}}async importMnemonic(e,t){try{let r=e;if(e.startsWith("{"))try{const i=JSON.parse(e);if("encrypted-mnemonic"===i.type&&i.data&&t){const e=await s().decrypt(i.data,t);if(!e)throw new Error("Password non valida o dati corrotti");r=e}else i.mnemonic&&(r=i.mnemonic)}catch(e){throw new Error("Formato JSON non valido o password errata")}try{l.v.fromPhrase(r)}catch(e){throw new Error("La mnemonica fornita non è valida")}const i=this.gun.user();if(!i||!i.is)throw new Error("L'utente deve essere autenticato per importare una mnemonica");(0,a.Rm)("Cancellazione dei wallet path esistenti prima dell'importazione della nuova mnemonica");try{await i.get("wallet_paths").put(null),(0,a.Rm)("Wallet path eliminati da Gun con successo")}catch(e){(0,a.vV)("Errore durante la cancellazione dei wallet path da Gun:",e)}try{const e=`shogun_wallet_paths_${this.getStorageUserIdentifier()}`;this.storage.removeItem(e),(0,a.Rm)("Wallet path eliminati da localStorage con successo")}catch(e){(0,a.vV)("Errore durante la cancellazione dei wallet path da localStorage:",e)}return this.walletPaths={},await this.saveUserMasterMnemonic(r),(0,a.Rm)("Nuova mnemonica salvata con successo"),this.resetMainWallet(),await this.createWallet(),(0,a.Rm)("Generato nuovo wallet con la mnemonica importata"),!0}catch(e){throw(0,a.vV)("Errore nell'importazione della mnemonica:",e),e}}async importWalletKeys(e,t){try{let r=[];(0,a.Rm)(`[importWalletKeys] Tentativo di importazione wallet, lunghezza dati: ${e.length} caratteri`),e.length>100?(0,a.Rm)(`[importWalletKeys] Primi 100 caratteri: ${e.substring(0,100)}...`):(0,a.Rm)(`[importWalletKeys] Dati completi: ${e}`),e=(e=e.replace(/^\uFEFF/,"")).trim();try{if(e.startsWith("{")||e.startsWith("[")){const i=JSON.parse(e);if((0,a.Rm)(`[importWalletKeys] JSON parsificato con successo, tipo: ${typeof i}, chiavi: ${Object.keys(i).join(", ")}`),"encrypted-wallets"===i.type&&i.data&&t){(0,a.Rm)("[importWalletKeys] Trovati dati cifrati, tentativo di decifratura...");try{const e=await s().decrypt(i.data,t);if(!e)throw(0,a.Rm)("[importWalletKeys] Decifratura fallita: risultato null"),new Error("Password non valida o dati corrotti");(0,a.Rm)("[importWalletKeys] Decifratura riuscita, tentativo di parsing..."),(0,a.Rm)("[importWalletKeys] Tipo dei dati decifrati:",typeof e),"string"==typeof e&&e.length>50&&(0,a.Rm)("[importWalletKeys] Primi 50 caratteri decifrati:",e.substring(0,50));try{const t=JSON.parse(e);if((0,a.Rm)("[importWalletKeys] Parsing riuscito, struttura:",Object.keys(t).join(", ")),t.wallets&&Array.isArray(t.wallets))r=t.wallets,(0,a.Rm)(`[importWalletKeys] Trovati ${r.length} wallet nei dati decifrati`);else{if(!Array.isArray(t))throw(0,a.Rm)("[importWalletKeys] Formato JSON decifrato non valido:",t),new Error("Formato JSON decifrato non valido: manca il campo 'wallets'");r=t,(0,a.Rm)(`[importWalletKeys] Trovato array diretto di ${r.length} wallet nei dati decifrati`)}}catch(e){throw(0,a.vV)(`[importWalletKeys] Errore nel parsing dei dati decifrati: ${e}`),new Error("Formato JSON decifrato non valido")}}catch(e){throw(0,a.vV)("[importWalletKeys] Errore durante la decifratura:",e),new Error(`Errore durante la decifratura: ${e.message||String(e)}`)}}else if(i.wallets){if(!Array.isArray(i.wallets))throw(0,a.Rm)("[importWalletKeys] Il campo wallets non è un array:",i.wallets),new Error("Formato JSON non valido: il campo 'wallets' non è un array");r=i.wallets,(0,a.Rm)(`[importWalletKeys] Trovati ${r.length} wallet nel JSON non cifrato`)}else{if(!Array.isArray(i))throw(0,a.Rm)("[importWalletKeys] Formato JSON non valido:",i),new Error("Formato JSON non valido: manca il campo 'wallets'");r=i,(0,a.Rm)(`[importWalletKeys] Trovato array diretto di ${r.length} wallet`)}}else{if((0,a.Rm)("[importWalletKeys] Il formato non sembra essere JSON valido"),e.split(" ").length>=12)throw(0,a.Rm)("[importWalletKeys] Potrebbe essere una mnemonic"),new Error("I dati sembrano essere una mnemonic, usa 'Importa Mnemonica' invece");if(!e.startsWith("0x")||66!==e.length)throw new Error("Formato non riconosciuto. Fornisci un file JSON valido.");(0,a.Rm)("[importWalletKeys] Potrebbe essere una chiave privata singola");try{const t=new d.u(e),i="m/44'/60'/0'/0/0";r=[{address:t.address,privateKey:t.privateKey,path:i,created:Date.now()}],(0,a.Rm)(`[importWalletKeys] Creato wallet singolo da chiave privata: ${t.address}`)}catch(e){throw(0,a.vV)("[importWalletKeys] Errore nella creazione del wallet da chiave privata:",e),new Error(`Chiave privata non valida: ${e}`)}}}catch(e){throw(0,a.vV)(`[importWalletKeys] Errore nel parsing JSON: ${e}`),new Error(`Formato JSON non valido o password errata: ${e||String(e)}`)}if(!Array.isArray(r)||0===r.length)throw(0,a.Rm)("[importWalletKeys] Nessun wallet valido trovato nei dati forniti"),new Error("Nessun wallet valido trovato nei dati forniti");(0,a.Rm)(`[importWalletKeys] Inizio importazione di ${r.length} wallet...`);let i=0;for(const e of r)try{if((0,a.Rm)(`[importWalletKeys] Tentativo di importazione wallet: ${JSON.stringify(e).substring(0,100)}...`),!e.privateKey){(0,a.Rm)("[importWalletKeys] Manca la chiave privata, salto questo wallet");continue}const t=e.path||"m/44'/60'/0'/0/0";try{const r=new d.u(e.privateKey);e.address&&r.address.toLowerCase()!==e.address.toLowerCase()&&(0,a.JE)(`[importWalletKeys] L'indirizzo generato ${r.address} non corrisponde all'indirizzo fornito ${e.address}`),this.walletPaths[r.address]={path:t,created:e.created||Date.now()},this.saveWalletPathsToLocalStorage(),i++,(0,a.Rm)(`[importWalletKeys] Wallet importato con successo: ${r.address}`)}catch(e){(0,a.vV)(`[importWalletKeys] Errore nella creazione del wallet: ${e.message||String(e)}`)}}catch(e){(0,a.vV)(`[importWalletKeys] Errore nell'importazione del wallet: ${e.message||String(e)}`)}if(0===i)throw new Error("Nessun wallet è stato importato con successo");return this.resetMainWallet(),(0,a.Rm)(`[importWalletKeys] Importazione completata: ${i} wallet importati su ${r.length}`),i}catch(e){throw(0,a.vV)("Errore nell'importazione dei wallet:",e),e}}async importGunPair(e,t){try{let r;try{const i=JSON.parse(e);if("encrypted-gun-pair"===i.type&&i.data&&t){const e=await s().decrypt(i.data,t);if(!e)throw new Error("Password non valida o dati corrotti");r=JSON.parse(e)}else r=i}catch(e){throw new Error("Formato JSON non valido o password errata")}if(!(r&&r.pub&&r.priv&&r.epub&&r.epriv))throw new Error("Il pair di Gun non è completo o valido");try{if(!this.gun.user())throw new Error("Gun non disponibile");return(0,a.Rm)("Pair di Gun validato con successo, pronto per l'autenticazione"),!0}catch(e){throw new Error(`Errore nell'autenticazione con il pair importato: ${e}`)}}catch(e){throw(0,a.vV)("Errore nell'importazione del pair di Gun:",e),e}}async importAllUserData(e,t,r={importMnemonic:!0,importWallets:!0,importGunPair:!0}){try{if(!t)throw new Error("La password è obbligatoria per importare il backup");let i;(0,a.Rm)(`[importAllUserData] Tentativo di importazione backup, lunghezza: ${e.length} caratteri`),e.length>100?(0,a.Rm)(`[importAllUserData] Primi 100 caratteri: ${e.substring(0,100)}...`):(0,a.Rm)(`[importAllUserData] Dati completi: ${e}`),e=(e=e.replace(/^\uFEFF/,"")).trim();try{if((0,a.Rm)("[importAllUserData] Tentativo di parsing JSON..."),!e.startsWith("{")&&!e.startsWith("["))throw(0,a.Rm)("[importAllUserData] Il formato non sembra essere JSON valido"),new Error("Il backup deve essere in formato JSON valido");const r=JSON.parse(e);if((0,a.Rm)(`[importAllUserData] JSON parsificato con successo, tipo: ${r.type||"non specificato"}`),"encrypted-shogun-backup"!==r.type||!r.data)throw(0,a.Rm)("[importAllUserData] Formato del backup non valido:",r),new Error("Formato del backup non valido: manca il tipo o i dati");(0,a.Rm)("[importAllUserData] Tentativo di decifratura...");try{i=await s().decrypt(r.data,t)}catch(e){throw(0,a.vV)("[importAllUserData] Errore nella decifratura:",e),new Error(`Errore nella decifratura: ${e}`)}if(!i)throw(0,a.Rm)("[importAllUserData] Decifratura fallita: null o undefined"),new Error("Password non valida o dati corrotti");(0,a.Rm)("[importAllUserData] Decifratura riuscita, tentativo di parsing del contenuto..."),(0,a.Rm)("[importAllUserData] Tipo di dati decifrati:",typeof i),"string"==typeof i&&i.length>50&&(0,a.Rm)("[importAllUserData] Primi 50 caratteri decifrati:",i.substring(0,50));try{i=JSON.parse(i),(0,a.Rm)("[importAllUserData] Parsing del contenuto decifrato riuscito")}catch(e){throw(0,a.vV)("[importAllUserData] Errore nel parsing del contenuto decifrato:",e),new Error(`Errore nel parsing del contenuto decifrato: ${e}`)}}catch(e){throw(0,a.vV)("[importAllUserData] Errore generale:",e),new Error(`Formato JSON non valido o password errata: ${e}`)}const n={success:!1};if(r.importMnemonic&&i.mnemonic)try{(0,a.Rm)("[importAllUserData] Tentativo di importazione mnemonica..."),await this.saveUserMasterMnemonic(i.mnemonic),n.mnemonicImported=!0,(0,a.Rm)("[importAllUserData] Mnemonica importata con successo")}catch(e){(0,a.vV)("[importAllUserData] Errore nell'importazione della mnemonica:",e),n.mnemonicImported=!1}else(0,a.Rm)("[importAllUserData] Importazione mnemonica non richiesta o mnemonica non trovata");if(r.importWallets&&i.wallets&&Array.isArray(i.wallets))try{(0,a.Rm)(`[importAllUserData] Tentativo di importazione di ${i.wallets.length} wallet...`);const e=JSON.stringify({wallets:i.wallets});n.walletsImported=await this.importWalletKeys(e),(0,a.Rm)(`[importAllUserData] ${n.walletsImported} wallet importati con successo`)}catch(e){(0,a.vV)("[importAllUserData] Errore nell'importazione dei wallet:",e),n.walletsImported=0}else(0,a.Rm)("[importAllUserData] Importazione wallet non richiesta o wallet non trovati"),r.importWallets&&(0,a.Rm)("[importAllUserData] Dettagli wallets:",i.wallets);if(r.importGunPair&&i.user&&i.user.pair)try{(0,a.Rm)("[importAllUserData] Tentativo di importazione pair Gun...");const e=JSON.stringify(i.user.pair);await this.importGunPair(e),n.gunPairImported=!0,(0,a.Rm)("[importAllUserData] Pair Gun importato con successo")}catch(e){(0,a.vV)("[importAllUserData] Errore nell'importazione del pair di Gun:",e),n.gunPairImported=!1}else(0,a.Rm)("[importAllUserData] Importazione pair Gun non richiesta o pair non trovato"),r.importGunPair&&(0,a.Rm)("[importAllUserData] Dettagli user:",i.user);return n.success=!!(r.importMnemonic&&n.mnemonicImported||r.importWallets&&n.walletsImported&&n.walletsImported>0||r.importGunPair&&n.gunPairImported),(0,a.Rm)("[importAllUserData] Risultato finale:",n),n}catch(e){throw(0,a.vV)("Errore nell'importazione del backup:",e),e}}setBalanceCacheTTL(e){if(e<0)throw new Error("Cache TTL must be a positive number");this.config.balanceCacheTTL=e,(0,a.Rm)(`Balance cache TTL updated to ${e}ms`)}isUserAuthenticated(){const e=this.gun.user();return!!(e&&e._&&e._.sea)}async exportWalletData(e={}){try{const t=await this.loadWallets(),r={version:"2.0",timestamp:Date.now(),wallets:t.map((t=>({address:t.address,path:t.path,created:this.walletPaths[t.address]?.created||Date.now(),...e.includePrivateKeys?{privateKey:t.wallet.privateKey}:{}}))),...e.includeHistory?{history:await this.getWalletHistory()}:{}};if(e.encryptionPassword){const t=await s().encrypt(JSON.stringify(r),e.encryptionPassword);return JSON.stringify({type:"encrypted-wallet-backup",version:"2.0",data:t})}return JSON.stringify(r)}catch(e){throw(0,a.vV)("Error exporting wallet data:",e),e}}async importWalletData(e,t={}){try{let r;if(!e.startsWith("{"))throw new Error("Invalid wallet data format");{const i=JSON.parse(e);if("encrypted-wallet-backup"===i.type&&t.decryptionPassword){const e=await s().decrypt(i.data,t.decryptionPassword);if(!e)throw new Error("Decryption failed");r=JSON.parse(e)}else r=i}let n=0;for(const e of r.wallets)try{if(t.validateAddresses){if(!m.PW(e.address))continue}if(!t.overwriteExisting&&this.walletPaths[e.address])continue;this.walletPaths[e.address]={path:e.path,created:e.created||Date.now()},n++}catch(t){(0,a.vV)(`Error importing wallet ${e.address}:`,t);continue}return await this.saveWalletPathsToLocalStorage(),this.emit(i.WALLET_IMPORTED,{type:i.WALLET_IMPORTED,data:{count:n},timestamp:Date.now()}),n}catch(e){throw(0,a.vV)("Error importing wallet data:",e),e}}async getWalletHistory(){return[]}}},3011:(e,t,r)=>{"use strict";r.r(t),r.d(t,{WalletPlugin:()=>l});var i=r(8051),a=r(4532),n=r(4586),s=r(2682),o=r(5628),c=r(3358);class l extends n.j{constructor(){super(...arguments),this.name="wallet",this.version="1.0.0",this.description="Provides wallet management functionality for Shogun Core",this.walletManager=null}initialize(e){if(super.initialize(e),!e.gundb||!e.gun||!e.storage)throw new Error("Core dependencies not available");this.walletManager=new s.T(e.gun,e.storage,{balanceCacheTTL:e.config?.walletManager?.balanceCacheTTL,rpcUrl:e.provider instanceof i.FR?e.provider.connection?.url:void 0}),(0,o.Rm)("Wallet plugin initialized")}destroy(){this.walletManager=null,super.destroy(),(0,o.Rm)("Wallet plugin destroyed")}assertWalletManager(){if(this.assertInitialized(),!this.walletManager)throw new Error("Wallet manager not initialized");return this.walletManager}getMainWallet(){return this.assertWalletManager().getMainWallet()}async createWallet(){return this.assertWalletManager().createWallet()}async loadWallets(){try{const e=this.assertWalletManager();return this.core?.isLoggedIn()?await e.loadWallets():((0,o.Rm)("Cannot load wallets: user not authenticated"),c.zc.handle(c.By.AUTHENTICATION,"AUTH_REQUIRED","User authentication required to load wallets",null),[])}catch(e){return c.zc.handle(c.By.WALLET,"LOAD_WALLETS_ERROR",`Error loading wallets: ${e instanceof Error?e.message:String(e)}`,e),[]}}getStandardBIP44Addresses(e,t=5){return this.assertWalletManager().getStandardBIP44Addresses(e,t)}generateNewMnemonic(){try{const e=a.u.createRandom().mnemonic;if(!e||!e.phrase)throw new Error("Failed to generate mnemonic phrase");return e.phrase}catch(e){throw(0,o.vV)("Error generating mnemonic:",e),new Error("Failed to generate mnemonic phrase")}}async signMessage(e,t){return this.assertWalletManager().signMessage(e,t)}verifySignature(e,t){return this.assertWalletManager().verifySignature(e,t)}async signTransaction(e,t,r){return this.assertWalletManager().signTransaction(e,t,r)}async exportMnemonic(e){return this.assertWalletManager().exportMnemonic(e)}async exportWalletKeys(e){return this.assertWalletManager().exportWalletKeys(e)}async exportGunPair(e){return this.assertWalletManager().exportGunPair(e)}async exportAllUserData(e){return this.assertWalletManager().exportAllUserData(e)}async importMnemonic(e,t){return this.assertWalletManager().importMnemonic(e,t)}async importWalletKeys(e,t){return this.assertWalletManager().importWalletKeys(e,t)}async importGunPair(e,t){return this.assertWalletManager().importGunPair(e,t)}async importAllUserData(e,t,r={importMnemonic:!0,importWallets:!0,importGunPair:!0}){return this.assertWalletManager().importAllUserData(e,t,r)}setRpcUrl(e){try{return e?(this.assertWalletManager().setRpcUrl(e),this.core&&(this.core.provider=new i.FR(e)),(0,o.Rm)(`RPC URL updated to: ${e}`),!0):((0,o.Rm)("Invalid RPC URL provided"),!1)}catch(e){return(0,o.vV)("Failed to set RPC URL",e),!1}}getRpcUrl(){return this.core&&this.core.provider instanceof i.FR&&this.core.provider.connection?.url||null}}},3358:(e,t,r)=>{"use strict";r.d(t,{$5:()=>n,By:()=>i,zc:()=>s});var i,a=r(5628);function n(e,t,r,i){return{type:e,code:t,message:r,originalError:i,timestamp:Date.now()}}!function(e){e.AUTHENTICATION="AuthenticationError",e.AUTHORIZATION="AuthorizationError",e.VALIDATION="ValidationError",e.NETWORK="NetworkError",e.DATABASE="DatabaseError",e.WALLET="WalletError",e.DID="DIDError",e.STORAGE="StorageError",e.ENCRYPTION="EncryptionError",e.SIGNATURE="SignatureError",e.ENVIRONMENT="EnvironmentError",e.SECURITY="SecurityError",e.GUN="GunError",e.STEALTH="StealthError",e.WEBAUTHN="WebAuthnError",e.PLUGIN="PluginError",e.UNKNOWN="UnknownError",e.CONNECTOR="CONNECTOR",e.GENERAL="GENERAL"}(i||(i={}));class s{static handleError(e){(0,a.vV)(`[${e.type}] ${e.code}: ${e.message}`),this.errors.push(e),this.errors.length>this.maxErrors&&(this.errors=this.errors.slice(-this.maxErrors)),this.notifyListeners(e)}static handle(e,t,r,i,s="error"){const o=i?`${r} - ${this.formatError(i)}`:r;switch(s){case"debug":(0,a.Rm)(`[${e}.${t}] (DEBUG) ${o}`);break;case"warn":(0,a.Rm)(`[${e}.${t}] (WARN) ${o}`);break;case"info":(0,a.Rm)(`[${e}.${t}] (INFO) ${o}`);break;default:(0,a.Rm)(`[${e}.${t}] (ERROR) ${o}`),i&&i instanceof Error&&(0,a.Rm)(i.stack||"No stack trace available")}const c=n(e,t,o,i);return this.handleError(c),c}static getRecentErrors(e=10){return this.errors.slice(-Math.min(e,this.errors.length))}static addListener(e){this.listeners.push(e)}static removeListener(e){const t=this.listeners.indexOf(e);-1!==t&&this.listeners.splice(t,1)}static notifyListeners(e){for(const t of this.listeners)try{t(e)}catch(e){(0,a.vV)(`Error in error listener: ${e}`)}}static formatError(e){if(!e)return"Unknown error";if(e instanceof Error)return`${e.name}: ${e.message}`;if("string"==typeof e)return e;if("object"==typeof e)try{return JSON.stringify(e)}catch(t){return`Object: ${Object.prototype.toString.call(e)}`}return String(e)}static async withRetry(e,t,r,i=3,n=1e3){let s;for(let t=1;t<=i;t++)try{return await e()}catch(e){s=e;const r=n*t;t<i&&((0,a.Rm)(`Retrying operation after ${r}ms (attempt ${t}/${i})`),await new Promise((e=>setTimeout(e,r))))}throw this.handle(t,r,`Operation failed after ${i} attempts`,s)}}s.errors=[],s.maxErrors=100,s.listeners=[]},4134:(e,t,r)=>{"use strict";r.d(t,{b:()=>a});var i=r(5628);class a{constructor(){this.events=new Map}on(e,t){this.events.has(e)||this.events.set(e,[]),this.events.get(e)?.push(t)}emit(e,t){if(!this.events.has(e))return!1;return(this.events.get(e)||[]).forEach((r=>{try{r(t)}catch(t){(0,i.vV)(`Error in event listener for ${String(e)}:`,t)}})),!0}off(e,t){if(!this.events.has(e))return;const r=this.events.get(e)||[],i=r.indexOf(t);-1!==i&&(r.splice(i,1),0===r.length?this.events.delete(e):this.events.set(e,r))}once(e,t){const r=i=>{t(i),this.off(e,r)};this.on(e,r)}removeAllListeners(e){e?this.events.delete(e):this.events.clear()}}},4586:(e,t,r)=>{"use strict";r.d(t,{j:()=>i});class i{constructor(){this.core=null}initialize(e){this.core=e}destroy(){this.core=null}assertInitialized(){if(!this.core)throw new Error(`Plugin ${this.name} not initialized`);return this.core}}},5628:(e,t,r)=>{"use strict";r.d(t,{JE:()=>c,MD:()=>l,Rm:()=>s,vV:()=>o,yM:()=>n});let i={enabled:"true"===r(5606).env.DEBUG,level:"info",prefix:"[ShogunSDK]"},a=!1;function n(e){i={...i,...e}}function s(e,...t){(new Date).toISOString()}function o(e,...t){(new Date).toISOString()}function c(e,...t){(new Date).toISOString()}function l(e,...t){if(!a)return;(new Date).toISOString()}},5736:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=5736,e.exports=t},7028:(e,t,r)=>{"use strict";r.d(t,{A:()=>i});const i={TIMEOUT:{AUTH:6e4,GUN:5e3,WALLET:3e4},PATHS:{DERIVATION_BASE:"m/44'/60'/0'/0/",DEFAULT_INDEX:0},STORAGE_KEYS:{ENTROPY:"hedgehog-entropy-key",GUN_PAIR:"gun-current-pair",WALLET_PATHS:"walletPaths_",SESSION:"gun-current-session"},GUN_TABLES:{USERS:"users",WALLET_PATHS:"walletPathsV2",AUTHENTICATIONS:"authenticationsV2",WEBAUTHN:"webauthn",STEALTH:"stealth"},AUTH:{MIN_PASSWORD_LENGTH:8,MAX_USERNAME_LENGTH:64,MIN_USERNAME_LENGTH:3},PREFIX:"⚔️ ShogunSDK:",PEERS:[],MESSAGE_TO_SIGN:"Access With Shogun"}},7160:(e,t,r)=>{"use strict";r.d(t,{C:()=>p});var i=r(6525),a=r(1442),n=r(31),s=r(2011),o=r(7303),c=r(8051),l=r(4532),u=r(7649),d=r(5628),h=r(7028),g=r(3358),m=r(4134);class p extends m.b{constructor(e={}){super(),this.MESSAGE_TO_SIGN="I Love Shogun!",this.DEFAULT_CONFIG={cacheDuration:18e5,maxRetries:3,retryDelay:1e3,timeout:6e4},this.signatureCache=new Map,this.provider=null,this.customProvider=null,this.customWallet=null,this.config={...this.DEFAULT_CONFIG,...e},this.AUTH_DATA_TABLE=h.A.GUN_TABLES.AUTHENTICATIONS||"Authentications",this.initProvider(),this.setupEventListeners()}initProvider(){if("undefined"!=typeof window&&window.ethereum)try{this.provider=new i.k(window.ethereum),(0,d.MD)("BrowserProvider initialized successfully")}catch(e){(0,d.vV)("Failed to initialize BrowserProvider",e)}else(0,d.JE)("Window.ethereum is not available")}async setupProvider(){try{"undefined"!=typeof window&&window.ethereum?(this.provider=new i.k(window.ethereum),(0,d.MD)("BrowserProvider initialized successfully")):(0,d.JE)("Window.ethereum is not available")}catch(e){(0,d.vV)("Failed to initialize BrowserProvider",e)}}setupEventListeners(){this.provider&&(this.provider.on("network",((e,t)=>{this.emit("chainChanged",e)})),window.ethereum?.on&&window.ethereum.on("accountsChanged",(e=>{this.emit("accountsChanged",e)})))}cleanup(){this.provider&&this.provider.removeAllListeners(),this.removeAllListeners()}getCachedSignature(e){const t=this.signatureCache.get(e);if(!t)return null;return Date.now()-t.timestamp>this.config.cacheDuration?(this.signatureCache.delete(e),null):t.signature}cacheSignature(e,t){this.signatureCache.set(e,{signature:t,timestamp:Date.now(),address:e})}validateAddress(e){if(!e)throw new Error("Address not provided");try{const t=String(e).trim().toLowerCase();if(!a.PW(t))throw new Error("Invalid address format");return n.b(t)}catch(e){throw g.zc.handle(g.By.VALIDATION,"INVALID_ADDRESS","Invalid Ethereum address provided",e),e}}async connectMetaMask(){try{if((0,d.MD)("Attempting to connect to MetaMask..."),!this.provider&&((0,d.MD)("Provider not initialized, setting up..."),this.initProvider(),!this.provider))throw new Error("MetaMask is not available. Please install MetaMask extension.");(0,d.MD)("Requesting account access...");let e=[];if(window.ethereum)try{e=await window.ethereum.request({method:"eth_requestAccounts"}),(0,d.MD)(`Accounts requested successfully: ${e.length} accounts returned`)}catch(e){throw(0,d.vV)("Error requesting MetaMask accounts:",e),new Error("User denied account access")}e&&0!==e.length||(0,d.MD)("No accounts found, trying to get signer...");for(let e=1;e<=this.config.maxRetries;e++)try{(0,d.MD)(`Attempt ${e} to get signer...`);const t=await this.provider.getSigner(),r=await t.getAddress();if(!r)throw(0,d.vV)("No address returned from signer"),new Error("No accounts found in MetaMask");(0,d.MD)(`Signer address obtained: ${r}`);const i=`mm_${r.toLowerCase()}`;return this.emit("connected",{address:r}),(0,d.MD)(`MetaMask connected successfully with address: ${r}`),{success:!0,address:r,username:i}}catch(t){if((0,d.vV)(`Error in connection attempt ${e}:`,t),e===this.config.maxRetries)throw t;(0,d.MD)(`Retrying in ${this.config.retryDelay}ms...`),await new Promise((e=>setTimeout(e,this.config.retryDelay)))}throw new Error("Failed to connect after retries")}catch(e){return(0,d.vV)("Failed to connect to MetaMask:",e),g.zc.handle(g.By.NETWORK,"METAMASK_CONNECTION_ERROR",e.message??"Unknown error while connecting to MetaMask",e),{success:!1,error:e.message}}}async generateCredentials(e){(0,d.MD)("Generating credentials for address:",e);try{const t=this.validateAddress(e),r=this.getCachedSignature(t);if(r)return(0,d.MD)("Using cached signature for address:",t),this.generateCredentialsFromSignature(t,r);try{const e=await this.requestSignatureWithTimeout(t,this.MESSAGE_TO_SIGN,this.config.timeout);return this.cacheSignature(t,e),this.generateCredentialsFromSignature(t,e)}catch(e){return(0,d.JE)(`Failed to get signature: ${e}. Using fallback method.`),this.generateFallbackCredentials(t)}}catch(e){throw g.zc.handle(g.By.AUTHENTICATION,"CREDENTIALS_GENERATION_ERROR",e.message??"Error generating MetaMask credentials",e),e}}generateCredentialsFromSignature(e,t){return{username:`mm_${e.toLowerCase()}`,password:s.S(o.YW(`${t}:${e.toLowerCase()}`)),message:this.MESSAGE_TO_SIGN,signature:t}}generateFallbackCredentials(e){(0,d.JE)("Using fallback credentials generation for address:",e);const t=`mm_${e.toLowerCase()}`,r=`SHOGUN_FALLBACK:${e.toLowerCase()}`;return{username:t,password:s.S(o.YW(r)),message:r,signature:s.S(o.YW(r))}}static isMetaMaskAvailable(){const e=window.ethereum;return"undefined"!=typeof window&&void 0!==e&&!0===e?.isMetaMask}requestSignatureWithTimeout(e,t,r=3e4){return new Promise(((i,a)=>{let n=setTimeout((()=>{n=null,a(new Error("Timeout requesting signature"))}),r);const s=()=>{n&&(clearTimeout(n),n=null),window.ethereum?.removeListener&&window.ethereum.removeListener("accountsChanged",o)},o=e=>{s(),a(e)};window.ethereum?.on&&window.ethereum.on("accountsChanged",o);(async()=>{try{if(!this.provider&&(this.initProvider(),!this.provider))throw new Error("Provider not initialized");const r=await this.provider.getSigner(),a=await r.getAddress();if(a.toLowerCase()!==e.toLowerCase())throw new Error(`Signer address (${a}) does not match expected address (${e})`);(0,d.MD)(`Requesting signature for message: ${t}`);const n=await r.signMessage(t);(0,d.MD)("Signature obtained successfully"),s(),i(n)}catch(e){(0,d.vV)("Failed to request signature:",e),s(),a(e)}})()}))}isAvailable(){return"undefined"!=typeof window&&!!window.ethereum}setCustomProvider(e,t){if(!e||"string"!=typeof e)throw new Error("Invalid RPC URL");if(!t||"string"!=typeof t)throw new Error("Invalid private key");try{this.customProvider=new c.FR(e),this.customWallet=new l.u(t,this.customProvider),(0,d.MD)("Custom provider configured successfully")}catch(e){throw new Error(`Error configuring provider: ${e.message??"Unknown error"}`)}}async getSigner(){try{if(this.customWallet)return this.customWallet;if(this.provider||this.initProvider(),!this.provider)throw new Error("Provider not initialized");return await this.provider.getSigner()}catch(e){throw new Error(`Unable to get Ethereum signer: ${e.message||"Unknown error"}`)}}async generatePassword(e){if(!e)throw new Error("Invalid signature");return s.S(o.YW(e)).slice(2,66)}async verifySignature(e,t){if(!e||!t)throw new Error("Invalid message or signature");try{return u.l(e,t)}catch(e){throw new Error("Invalid message or signature")}}async getEthereumSigner(){if(!p.isMetaMaskAvailable())throw new Error("MetaMask not found. Please install MetaMask to continue.");try{const e=window.ethereum;await e.request({method:"eth_requestAccounts"});return new i.k(e).getSigner()}catch(e){throw new Error(`Error accessing MetaMask: ${e.message??"Unknown error"}`)}}}"undefined"!=typeof window?window.MetaMask=p:void 0!==r.g&&(r.g.MetaMask=p)},8991:(e,t,r)=>{"use strict";r.r(t),r.d(t,{MetaMaskPlugin:()=>c});var i=r(4586),a=r(7160),n=r(5628),s=r(7649),o=r(3358);class c extends i.j{constructor(){super(...arguments),this.name="metamask",this.version="1.0.0",this.description="Provides MetaMask wallet connection and authentication for ShogunCore",this.metamask=null}initialize(e){super.initialize(e),this.metamask=new a.C,(0,n.Rm)("MetaMask plugin initialized")}destroy(){this.metamask&&this.metamask.cleanup(),this.metamask=null,super.destroy(),(0,n.Rm)("MetaMask plugin destroyed")}assertMetaMask(){if(this.assertInitialized(),!this.metamask)throw new Error("MetaMask module not initialized");return this.metamask}isAvailable(){return this.assertMetaMask().isAvailable()}async connectMetaMask(){return this.assertMetaMask().connectMetaMask()}async generateCredentials(e){return this.assertMetaMask().generateCredentials(e)}cleanup(){this.assertMetaMask().cleanup()}setCustomProvider(e,t){this.assertMetaMask().setCustomProvider(e,t)}async getSigner(){return this.assertMetaMask().getSigner()}async generatePassword(e){return this.assertMetaMask().generatePassword(e)}async verifySignature(e,t){return this.assertMetaMask().verifySignature(e,t)}async login(e){(0,n.Rm)("Login with MetaMask");try{const t=this.assertInitialized();if((0,n.Rm)(`MetaMask login attempt for address: ${e}`),!e)throw(0,o.$5)(o.By.VALIDATION,"ADDRESS_REQUIRED","Ethereum address required for MetaMask login");if(!this.isAvailable())throw(0,o.$5)(o.By.ENVIRONMENT,"METAMASK_UNAVAILABLE","MetaMask is not available in the browser");(0,n.Rm)("Generating credentials for MetaMask login...");const r=await this.generateCredentials(e);if(!(r?.username&&r?.password&&r.signature&&r.message))throw(0,o.$5)(o.By.AUTHENTICATION,"CREDENTIAL_GENERATION_FAILED","MetaMask credentials not generated correctly or signature missing");(0,n.Rm)(`Credentials generated successfully. Username: ${r.username}`),(0,n.Rm)("Verifying MetaMask signature...");const i=s.l(r.message,r.signature);if(i.toLowerCase()!==e.toLowerCase())throw(0,n.vV)(`Signature verification failed. Expected: ${e}, Got: ${i}`),(0,o.$5)(o.By.SECURITY,"SIGNATURE_VERIFICATION_FAILED","MetaMask signature verification failed. Address mismatch.");(0,n.Rm)("MetaMask signature verified successfully."),(0,n.Rm)("Attempting login or user creation with verified credentials...");const a=t.createUserWithGunDB.bind(t),c=await a(r.username,r.password);if(!c.success||!c.userPub)throw(0,o.$5)(o.By.AUTHENTICATION,"LOGIN_CREATE_FAILED",c.error??"Login or user creation failed after signature verification");(0,n.Rm)(`Login/Creation successful: ${c.userPub}`);let l=null;try{(0,n.Rm)("Ensuring user has a DID...");const r=t.ensureUserHasDID.bind(t);l=await r({services:[{type:"EcdsaSecp256k1VerificationKey2019",endpoint:`ethereum:${e}`}]}),l?(0,n.Rm)(`DID assigned/verified: ${l}`):(0,n.JE)("Could not ensure DID for user after MetaMask login.")}catch(e){o.zc.handle(o.By.DID,"DID_ENSURE_FAILED","Error ensuring DID for MetaMask user",e)}return t.emit("auth:login",{userPub:c.userPub,username:r.username,method:"metamask",did:l||void 0}),{success:!0,userPub:c.userPub,username:r.username,password:"********",did:l||void 0}}catch(e){const t=e?.type||o.By.AUTHENTICATION,r=e?.code||"METAMASK_LOGIN_ERROR",i=e?.message||"Unknown error during MetaMask login";return{success:!1,error:o.zc.handle(t,r,i,e).message}}}async signUp(e){(0,n.Rm)("Sign up with MetaMask");try{const t=this.assertInitialized();if((0,n.Rm)(`MetaMask registration attempt for address: ${e}`),!e)throw(0,o.$5)(o.By.VALIDATION,"ADDRESS_REQUIRED","Ethereum address required for MetaMask registration");if(!this.isAvailable())throw(0,o.$5)(o.By.ENVIRONMENT,"METAMASK_UNAVAILABLE","MetaMask is not available in the browser");(0,n.Rm)("Generating credentials for MetaMask registration...");const r=await this.generateCredentials(e);if(!(r?.username&&r?.password&&r.signature&&r.message))throw(0,o.$5)(o.By.AUTHENTICATION,"CREDENTIAL_GENERATION_FAILED","MetaMask credentials not generated correctly or signature missing");(0,n.Rm)(`Credentials generated successfully. Username: ${r.username}`),(0,n.Rm)("Verifying MetaMask signature...");const i=s.l(r.message,r.signature);if(i.toLowerCase()!==e.toLowerCase())throw(0,n.vV)(`Signature verification failed. Expected: ${e}, Got: ${i}`),(0,o.$5)(o.By.SECURITY,"SIGNATURE_VERIFICATION_FAILED","MetaMask signature verification failed. Address mismatch.");(0,n.Rm)("MetaMask signature verified successfully."),(0,n.Rm)("Attempting user creation (or login if exists) with verified credentials...");const a=t.createUserWithGunDB.bind(t),c=await a(r.username,r.password);if(!c.success||!c.userPub)throw(0,o.$5)(o.By.AUTHENTICATION,"USER_CREATE_LOGIN_FAILED",c.error??"User creation or login failed after signature verification");(0,n.Rm)(`User creation/login successful: ${c.userPub}`);let l=null;try{(0,n.Rm)("Creating/Ensuring DID with MetaMask verification service...");const r=t.ensureUserHasDID.bind(t);l=await r({services:[{type:"EcdsaSecp256k1VerificationKey2019",endpoint:`ethereum:${e}`}]}),l?(0,n.Rm)(`DID created/verified: ${l}`):(0,n.JE)("Could not ensure DID for user after MetaMask signup.")}catch(e){o.zc.handle(o.By.DID,"DID_ENSURE_FAILED","Error ensuring DID for MetaMask user during signup",e)}return t.emit("auth:signup",{userPub:c.userPub,username:r.username,method:"metamask",did:l??void 0}),{success:!0,userPub:c.userPub,username:r.username,password:r.password,did:l??void 0}}catch(e){const t=e?.type??o.By.AUTHENTICATION,r=e?.code??"METAMASK_SIGNUP_ERROR",i=e?.message??"Unknown error during MetaMask registration";return{success:!1,error:o.zc.handle(t,r,i,e).message}}}async loginWithMetaMask(e){return this.login(e)}async signUpWithMetaMask(e){return this.signUp(e)}}}},a={};function n(e){var t=a[e];if(void 0!==t)return t.exports;var r=a[e]={id:e,loaded:!1,exports:{}};return i[e](r,r.exports,n),r.loaded=!0,r.exports}n.m=i,e=[],n.O=(t,r,i,a)=>{if(!r){var s=1/0;for(u=0;u<e.length;u++){for(var[r,i,a]=e[u],o=!0,c=0;c<r.length;c++)(!1&a||s>=a)&&Object.keys(n.O).every((e=>n.O[e](r[c])))?r.splice(c--,1):(o=!1,a<s&&(s=a));if(o){e.splice(u--,1);var l=i();void 0!==l&&(t=l)}}return t}a=a||0;for(var u=e.length;u>0&&e[u-1][2]>a;u--)e[u]=e[u-1];e[u]=[r,i,a]},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,r)=>(n.f[r](e,t),t)),[])),n.u=e=>e+".shogun-core.light.js",n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),t={},r="ShogunCore:",n.l=(e,i,a,s)=>{if(t[e])t[e].push(i);else{var o,c;if(void 0!==a)for(var l=document.getElementsByTagName("script"),u=0;u<l.length;u++){var d=l[u];if(d.getAttribute("src")==e||d.getAttribute("data-webpack")==r+a){o=d;break}}o||(c=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,n.nc&&o.setAttribute("nonce",n.nc),o.setAttribute("data-webpack",r+a),o.src=e),t[e]=[i];var h=(r,i)=>{o.onerror=o.onload=null,clearTimeout(g);var a=t[e];if(delete t[e],o.parentNode&&o.parentNode.removeChild(o),a&&a.forEach((e=>e(i))),r)return r(i)},g=setTimeout(h.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=h.bind(null,o.onerror),o.onload=h.bind(null,o.onload),c&&document.head.appendChild(o)}},n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");if(r.length)for(var i=r.length-1;i>-1&&(!e||!/^http(s?):/.test(e));)e=r[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{var e={792:0};n.f.j=(t,r)=>{var i=n.o(e,t)?e[t]:void 0;if(0!==i)if(i)r.push(i[2]);else{var a=new Promise(((r,a)=>i=e[t]=[r,a]));r.push(i[2]=a);var s=n.p+n.u(t),o=new Error;n.l(s,(r=>{if(n.o(e,t)&&(0!==(i=e[t])&&(e[t]=void 0),i)){var a=r&&("load"===r.type?"missing":r.type),s=r&&r.target&&r.target.src;o.message="Loading chunk "+t+" failed.\n("+a+": "+s+")",o.name="ChunkLoadError",o.type=a,o.request=s,i[1](o)}}),"chunk-"+t,t)}},n.O.j=t=>0===e[t];var t=(t,r)=>{var i,a,[s,o,c]=r,l=0;if(s.some((t=>0!==e[t]))){for(i in o)n.o(o,i)&&(n.m[i]=o[i]);if(c)var u=c(n)}for(t&&t(r);l<s.length;l++)a=s[l],n.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return n.O(u)},r=this.webpackChunkShogunCore=this.webpackChunkShogunCore||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var s=n.O(void 0,[96],(()=>n(2578)));return s=(s=n.O(s)).default})()));